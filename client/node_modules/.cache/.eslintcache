[{"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\index.js":"1","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\reportWebVitals.js":"2","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\App.jsx":"3","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\Admin.jsx":"4","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\about.jsx":"5","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\orders.jsx":"6","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Authentication\\SignUp.jsx":"7","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Authentication\\SignIn.jsx":"8","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Products\\mainpage.jsx":"9","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Products\\productpage.jsx":"10","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Products\\addReview.jsx":"11","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\ShoppingCart\\ShoppingCart.jsx":"12","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\UserProfile\\ProfileMain.jsx":"13","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminLogin.jsx":"14","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminPage.jsx":"15","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Feedback\\DangerFeedback.jsx":"16","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\ShoppingCart\\ShoppingCartObject.jsx":"17","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Feedback\\SuccessFeedback.jsx":"18","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\UserProfile\\OrderPage.jsx":"19","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerPrimaryLongBtn.jsx":"20","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\UserProfile\\ProfilePage.jsx":"21","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminAddNewEmployee.jsx":"22","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminAddNewProduct.jsx":"23","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminRestockProducts.jsx":"24","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminEditProduct.jsx":"25","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminEditEmployee.jsx":"26","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminRestockProduct.jsx":"27","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerDangerShortBtn.jsx":"28","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerPrimaryShortBtn.jsx":"29","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerSuccessLongBtn.jsx":"30","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\UserProfile\\Order.jsx":"31","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Webstore\\Home.jsx":"32","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Orders.jsx":"33","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Webstore\\Navbar.jsx":"34","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Webstore\\Footer.jsx":"35","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\ShoppingCart\\Checkout.jsx":"36","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerSmallLight.jsx":"37","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerLargeDark.jsx":"38","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerLargeSuccess.jsx":"39"},{"size":649,"mtime":1621081962057,"results":"40","hashOfConfig":"41"},{"size":375,"mtime":1621081962059,"results":"42","hashOfConfig":"41"},{"size":735,"mtime":1621570994702,"results":"43","hashOfConfig":"41"},{"size":1135,"mtime":1621435272847,"results":"44","hashOfConfig":"41"},{"size":3043,"mtime":1619861544537,"results":"45","hashOfConfig":"46"},{"size":3168,"mtime":1621081962044,"results":"47","hashOfConfig":"41"},{"size":10157,"mtime":1621435272894,"results":"48","hashOfConfig":"41"},{"size":7019,"mtime":1621435272894,"results":"49","hashOfConfig":"41"},{"size":6835,"mtime":1621570994710,"results":"50","hashOfConfig":"41"},{"size":7045,"mtime":1621570994713,"results":"51","hashOfConfig":"41"},{"size":6697,"mtime":1621570994708,"results":"52","hashOfConfig":"41"},{"size":3813,"mtime":1621570994718,"results":"53","hashOfConfig":"41"},{"size":6125,"mtime":1621608282935,"results":"54","hashOfConfig":"41"},{"size":5265,"mtime":1621570994690,"results":"55","hashOfConfig":"41"},{"size":5727,"mtime":1621608282925,"results":"56","hashOfConfig":"41"},{"size":449,"mtime":1621081961983,"results":"57","hashOfConfig":"41"},{"size":1553,"mtime":1621435272925,"results":"58","hashOfConfig":"41"},{"size":863,"mtime":1621081961984,"results":"59","hashOfConfig":"41"},{"size":810,"mtime":1621435272957,"results":"60","hashOfConfig":"41"},{"size":442,"mtime":1621435272925,"results":"61","hashOfConfig":"41"},{"size":14168,"mtime":1621435272972,"results":"62","hashOfConfig":"41"},{"size":6791,"mtime":1621081961951,"results":"63","hashOfConfig":"41"},{"size":8495,"mtime":1621435272847,"results":"64","hashOfConfig":"41"},{"size":4397,"mtime":1621608282927,"results":"65","hashOfConfig":"41"},{"size":15181,"mtime":1621435272879,"results":"66","hashOfConfig":"41"},{"size":12587,"mtime":1621448988968,"results":"67","hashOfConfig":"41"},{"size":3103,"mtime":1621081961970,"results":"68","hashOfConfig":"41"},{"size":407,"mtime":1621435272925,"results":"69","hashOfConfig":"41"},{"size":410,"mtime":1621435272941,"results":"70","hashOfConfig":"41"},{"size":555,"mtime":1621521028972,"results":"71","hashOfConfig":"41"},{"size":5802,"mtime":1621435272957,"results":"72","hashOfConfig":"41"},{"size":12307,"mtime":1621570994735,"results":"73","hashOfConfig":"41"},{"size":3168,"mtime":1621570994705,"results":"74","hashOfConfig":"41"},{"size":3336,"mtime":1621570994737,"results":"75","hashOfConfig":"41"},{"size":953,"mtime":1621570994733,"results":"76","hashOfConfig":"41"},{"size":21006,"mtime":1621570994715,"results":"77","hashOfConfig":"41"},{"size":303,"mtime":1621608282929,"results":"78","hashOfConfig":"41"},{"size":437,"mtime":1621570994719,"results":"79","hashOfConfig":"41"},{"size":402,"mtime":1621570994721,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l205bb",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rk0uft",{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\index.js",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\reportWebVitals.js",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\App.jsx",["171"],"import React, {Component} from \"react\";\r\nimport Home from \"./Webstore/Home\";\r\nimport Admin from \"./Admin/Admin\"\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        toggleAdmin: false,\r\n    };\r\n\r\n    handleToggleAdminPage = () => {\r\n        this.setState({toggleAdmin: !this.state.toggleAdmin})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {!this.state.toggleAdmin &&\r\n                <Home toggle_admin = {this.handleToggleAdminPage}/>}\r\n                {this.state.toggleAdmin &&\r\n                <Admin toggle_admin = {this.handleToggleAdminPage}/>}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\Admin.jsx",["172"],"import React, {Component} from \"react\";\r\nimport AdminLogin from \"./AdminLogin\";\r\nimport AdminPage from \"./AdminPage\"\r\n\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        toggleLogin: false,\r\n        current_user: {}\r\n    };\r\n\r\n    handleLoginCallback = user => {\r\n        this.setState({current_user: user, toggleLogin: true})\r\n    };\r\n    handleLogoutCallback = () => {\r\n        this.setState({current_user: {}, toggleLogin: false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.toggleLogin ?\r\n                    <AdminPage\r\n                        current_user={this.state.current_user}\r\n                        logoutCallback={this.handleLogoutCallback}\r\n                        toggle_admin={this.props.toggle_admin}\r\n                    /> :\r\n                    <AdminLogin\r\n                        loginCallback={this.handleLoginCallback}\r\n                        toggle_admin={this.props.toggle_admin}\r\n                    />}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\about.jsx",["173","174","175"],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\orders.jsx",["176","177"],"import React, {Component, Fragment} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Alert} from \"react-bootstrap\";\r\n\r\nclass Orders extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {user: \"\", orders: [], order_id: 0};\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        await axios({\r\n            method: \"get\",\r\n            url: 'https://localhost:3001/api/orders/getUserOrders/'+this.props.current_user.email,\r\n        }).then(response => {\r\n            this.setState({\r\n                orders: response.data, order_id: response.data.orders._id,});\r\n        }).catch(function (error){\r\n            console.log(error.data)\r\n        });\r\n    }\r\n    toggleEditProfile = () => {\r\n        this.setState({\r\n            toggle_edit_profile: true,\r\n            toggle_previous_orders: false,\r\n        })\r\n    };\r\n    toggleOrders = () => {\r\n        this.setState({\r\n            toggle_edit_profile: false,\r\n            toggle_previous_orders: true,\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const {orders} = this.state;\r\n        return(\r\n            <div className=\"orderContainer\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2 bg-secondary text-center fillColumn\">\r\n                        <button onClick={this.toggleEditProfile} className=\"btn btn-light btn-md m-2\">\r\n                            Edit Profile\r\n                        </button>\r\n                        <button onClick={this.toggleOrders} className=\"btn btn-light btn-md m-2\">\r\n                            Previous Orders\r\n                        </button>\r\n                    </div>\r\n                        <div className=\"col-md-10\">\r\n                        <h3 className=\"card-header\">Previous orders</h3>\r\n                        {!this.state.orders.products &&\r\n                        <Alert color=\"info\">You have no orders. Go shopping!</Alert>}\r\n                        {this.state.orders.products &&\r\n                        <Alert color=\"info\">You are logged in as {this.state.orders.firstName}. Here are your orders:</Alert>}\r\n                        <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">\r\n                            {orders &&\r\n                            [orders].map((order, index) => {\r\n                            return(\r\n                                <div key={index}>\r\n                                    {order.products &&\r\n                                    [order.products].map((o, i) => {\r\n                                        return(\r\n                                            <div key={i}>\r\n                                                <h6>Price: ${o.total}</h6>\r\n                                                <h6>Date: {o.date}</h6>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        )\r\n                    })}\r\n                </li>\r\n                </ul>\r\n            </div>\r\n\r\n            </div>\r\n    </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Orders","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Authentication\\SignUp.jsx",["178"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport DangerFeedback from \"../Feedback/DangerFeedback\";\r\nimport SuccessFeedback from \"../Feedback/SuccessFeedback\";\r\nimport LoadingSpinnerPrimaryLongBtn from \"../Spinners/LoadingSpinnerPrimaryLongBtn\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        country: '',\r\n        city: '',\r\n        zipCode: '',\r\n        street: '',\r\n        phoneNumber: '',\r\n        toggle_loading: false,\r\n        toggle_error_feedback: false,\r\n        toggle_success_feedback: false,\r\n        feedback_text: '',\r\n    }\r\n\r\n\r\n    handleInputChange = event => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({toggle_loading: true})\r\n        await axios({\r\n            method: 'post',\r\n            url: 'https://localhost:3001/api/register',\r\n            data: {\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                country: this.state.country,\r\n                city: this.state.city,\r\n                zipCode: this.state.zipCode,\r\n                street: this.state.street,\r\n                phoneNumber: this.state.phoneNumber,\r\n            }\r\n        }).then(response => {\r\n            this.setState({\r\n                toggle_loading: false,\r\n                toggle_success_feedback: true,\r\n                toggle_error_feedback: false,\r\n                feedback_text: response.data.Message\r\n            })\r\n        }).catch(error => {\r\n            this.setState({\r\n                toggle_loading: false,\r\n                toggle_success_feedback: false,\r\n                toggle_error_feedback: true,\r\n                feedback_text: error.response.data.Error\r\n            })\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"backgroundContainer position-fixed mt-5\">\r\n                <div className=\"row text-center justify-content-center mt-3\">\r\n                    <div\r\n                        className=\"col-md-6 col-lg-4 mh-75 bg-light mt-5 p-4 border border-secondary shadow-lg rounded\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\"/>\r\n                            <div className=\"col-6\">\r\n                                <h4>Sign in!</h4>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <button onClick={this.props.close} className=\"btn btn-light float-right\">\r\n                                    <CloseIcon/>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row text-center\">\r\n                            <div className=\"col-12\">\r\n                                <a href=\"https://localhost:3001/auth/google\" className=\"google-btn\">\r\n                                    <div className=\"google-icon-wrapper\">\r\n                                        <img className=\"google-icon\"\r\n                                             src=\"/btn_google_light_normal_ios.svg\"/>\r\n                                    </div>\r\n                                    <p className=\"btn-text\"><b>Sign up with google</b></p>\r\n                                </a>\r\n                                <div className=\"separator\">\r\n                                    <div className=\"line\"/>\r\n                                    <h5>or</h5>\r\n                                    <div className=\"line\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-2\">\r\n                            <div className=\"col-12\">\r\n                                <form onSubmit={this.handleSubmit} className=\"form-signin\">\r\n                                    <div className=\"form-label-group\">\r\n                                        <input type=\"text\" onChange={this.handleInputChange}\r\n                                               className=\"form-control mt-2\" placeholder=\"Firstname\"\r\n                                               pattern=\"^[A-ZÆØÅ]+[a-zæøå ,.'-]{1,20}(\\s[A-ZÆØÅ]+[a-zæøå ,.'-]{1,20})?$\"\r\n                                               title=\"First name has to start with an upper case letter and have at least 2 characters.\"\r\n                                               name=\"firstName\" required autoFocus=\"\"/>\r\n                                        <input type=\"text\" onChange={this.handleInputChange}\r\n                                               className=\"form-control mt-2\" placeholder=\"Lastname\"\r\n                                               pattern=\"^[A-ZÆØÅ]+[a-zæøå ,.'-]{1,20}$\"\r\n                                               title=\"Last name has to start with an upper case letter and have at least 2 characters.\"\r\n                                               name=\"lastName\" required autoFocus=\"\"/>\r\n                                        <input type=\"email\" onChange={this.handleInputChange}\r\n                                               className=\"form-control mt-2\" placeholder=\"Email\"\r\n                                               name=\"email\" required autoFocus=\"\"/>\r\n                                        <input type=\"Password\" onChange={this.handleInputChange}\r\n                                               className=\"form-control mt-2\" placeholder=\"Password\"\r\n                                               pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}\"\r\n                                               title=\"Password must contain at least 1 upper and lower case letter, 1 number and be at least 8 characters long.\"\r\n                                               name=\"password\" required autoFocus=\"\"/>\r\n                                        <select name=\"country\" onChange={this.handleInputChange}\r\n                                                className=\"custom-select my-1 mr-sm-2 mt-2\" required>\r\n                                            <option value=\"\" defaultValue=\"\">Choose...</option>\r\n                                            <option value=\"Norway\">Norway</option>\r\n                                            <option value=\"Sweden\">Sweden</option>\r\n                                            <option value=\"Denmark\">Denmark</option>\r\n                                        </select>\r\n                                        <input type=\"text\" onChange={this.handleInputChange}\r\n                                               className=\"form-control mt-2\" placeholder=\"City\"\r\n                                               pattern=\"^[A-ZÆØÅ]+[a-zæøåA-ZÆØÅ ,.'-]{1,20}(\\s[A-ZÆØÅ]+[a-zæøåA-ZÆØÅ ,.'-]{1,20})?(\\s[A-ZÆØÅ]+[a-zæøåA-ZÆØÅ ,.'-]{1,20})?$\"\r\n                                               title=\"City name has to start with an upper case letter and have at least 2 characters.\"\r\n                                               name=\"city\" required autoFocus=\"\"/>\r\n                                        <input type=\"text\" onChange={this.handleInputChange}\r\n                                               className=\"form-control mt-2\" placeholder=\"Zip Code\"\r\n                                               pattern=\"^\\d{4,5}(?:[-\\s]\\d{4})?$\"\r\n                                               name=\"zipCode\" required autoFocus=\"\"/>\r\n                                        <input type=\"text\" onChange={this.handleInputChange}\r\n                                               className=\"form-control mt-2\" placeholder=\"Street name\"\r\n                                               pattern=\"^[A-ZÆØÅ]+[a-zæøåA-ZÆØÅ ,.'-]{1,20}([A-ZÆØÅ]+[a-zæøåA-ZÆØÅ ,.'-]{1,20})?(\\s[A-ZÆØÅ]+[a-zæøåA-ZÆØÅ ,.'-]{1,20})?\\s\\d+\\s?[a-zæøåA-ZÆØÅ]?\"\r\n                                               title=\"The address should follow this format:\r\n                                       <Address> <Number><Letter(optional)>.\"\r\n                                               name=\"street\" required autoFocus=\"\"/>\r\n                                        <input type=\"text\" onChange={this.handleInputChange}\r\n                                               className=\"form-control mt-2\" placeholder=\"Phone\"\r\n                                               pattern=\"^(\\+|00)?[1-9][0-9 \\-\\(\\)\\.]{7,}$\"\r\n                                               title=\"The address should follow this format:\r\n                                       <Country code(optional)> <Number(At least 7 digits>.\"\r\n                                               name=\"phoneNumber\" required autoFocus=\"\"/>\r\n                                    </div>\r\n                                    {this.state.toggle_loading ? <LoadingSpinnerPrimaryLongBtn/> :\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-lg btn-primary btn-block mt-2\">Sign Up!\r\n                                        </button>}\r\n                                    {this.state.toggle_success_feedback &&\r\n                                    <SuccessFeedback feedback_success_text={this.state.feedback_text}/>}\r\n                                    {this.state.toggle_error_feedback &&\r\n                                    <DangerFeedback feedback_error_text={this.state.feedback_text}/>}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Authentication\\SignIn.jsx",["179"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport DangerFeedback from \"../Feedback/DangerFeedback\";\r\nimport LoadingSpinnerPrimaryLongBtn from \"../Spinners/LoadingSpinnerPrimaryLongBtn\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        toggle_loading: false,\r\n        toggle_error_feedback: false,\r\n        feedback_text: '',\r\n    };\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({toggle_loading: true});\r\n        await axios({\r\n            method: 'post',\r\n            url: 'https://localhost:3001/api/signIn',\r\n            data: {\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            }\r\n        }).then(response => {\r\n            this.props.loginCallback(response.data);\r\n            this.setState({toggle_error_feedback: false});\r\n        }).catch(error => {\r\n            this.setState({toggle_loading: false});\r\n            if (error.response) {\r\n\r\n                console.log(error.response.data.Error);\r\n                console.log(error.response.status);\r\n                this.setState({feedback_text: error.response.data.Error});\r\n                this.setState({toggle_error_feedback: true});\r\n            } else if (error.request) {\r\n                console.log(error.request);\r\n            } else {\r\n                console.log('Error', error.message);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"backgroundContainer position-fixed mt-5\">\r\n                <div className=\"row text-center justify-content-center mt-3\">\r\n                    <div\r\n                        className=\"col-md-6 col-lg-3 mh-75 bg-light mt-5 p-4 border border-secondary shadow-lg rounded\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\"/>\r\n                            <div className=\"col-6\">\r\n                                <h4>Sign in!</h4>\r\n                            </div>\r\n                            <div className=\"col-3\">\r\n                                <button onClick={this.props.close} className=\"btn btn-light float-right\">\r\n                                    <CloseIcon/>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <a href=\"https://localhost:3001/auth/google\" className=\"google-btn\">\r\n                                    <div className=\"google-icon-wrapper\">\r\n                                        <img className=\"google-icon\"\r\n                                             src=\"/btn_google_light_normal_ios.svg\"/>\r\n                                    </div>\r\n                                    <p className=\"btn-text\"><b>Sign in with google</b></p>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"separator\">\r\n                                    <div className=\"line\"/>\r\n                                    <h5>or</h5>\r\n                                    <div className=\"line\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-2\">\r\n                            <div className=\"col-md-12\">\r\n                                <form onSubmit={this.handleSubmit} className=\"form-signin\">\r\n                                    <div className=\"form-label-group\">\r\n                                        <div className=\"input-group\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text mt-2\" id=\"basic-addon1\">\r\n                                                    <AlternateEmailIcon/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <input type=\"email\" onChange={this.handleInputChange}\r\n                                                   className=\"form-control mt-2\"\r\n                                                   placeholder=\"Email\" name=\"email\" required=\"*\" autoFocus=\"\"\r\n                                                   aria-describedby=\"basic-addon1\"/>\r\n                                        </div>\r\n                                        <div className=\"input-group mb-2\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <div className=\"input-group-text mt-2\" id=\"basic-addon1\">\r\n                                                    <VpnKeyIcon/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <input type=\"Password\" onChange={this.handleInputChange}\r\n                                                   className=\"form-control mt-2\"\r\n                                                   pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}\"\r\n                                                   title=\"Password must contain at least 1 upper and lower case letter, 1 number and\r\n                                        be at least 8 characters long.\"\r\n                                                   placeholder=\"Password\" name=\"password\" required=\"*\" autoFocus=\"\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.state.toggle_loading ? <LoadingSpinnerPrimaryLongBtn/> :\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                                            Sign in!\r\n                                        </button>}\r\n                                    {this.state.toggle_error_feedback &&\r\n                                    <DangerFeedback feedback_error_text={this.state.feedback_text}/>}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Products\\mainpage.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Products\\productpage.jsx",["180","181"],"import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport { Button} from 'react-bootstrap';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport InputSpinner from \"react-bootstrap-input-spinner\";\r\n\r\n\r\nimport LoadingSpinnerSuccessLongBtn from \"../Spinners/LoadingSpinnerSuccessLongBtn\";\r\nimport LoadingSpinnerSmallLight from \"../Spinners/LoadingSpinnerSmallLight\";\r\nimport LoadingSpinnerLargeSuccess from \"../Spinners/LoadingSpinnerLargeSuccess\";\r\n\r\n\r\nexport default class Productpage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {descriptionLong: \"\", cart_feedback: false, toggle_loading: false, loading_photo: false};\r\n        this.state = {product: [], quantity: 1, price: 0, quantityOfProduct: 0, price_mapped: 0, reviews: []};\r\n    }\r\n\r\n    componentDidMount = async() => {\r\n        this.setState({loading_photo: true})\r\n        await axios({\r\n            method: \"get\",\r\n            url: 'https://localhost:3001/api/products/get/'+this.props.itemId,\r\n        }).then(response => {\r\n            this.setState({\r\n                product: response.data, price: response.data.price, quantityOfProduct: response.data.quantity\r\n            });\r\n        }).catch(error => {\r\n            if (!error.data) {\r\n                console.log(error.data)\r\n            }\r\n            console.log(error);\r\n        });\r\n        this.setState({loading_photo: false})\r\n    };\r\n\r\n\r\n    postToCart = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({toggle_loading: true})\r\n        await axios({\r\n            method: \"post\",\r\n            url: 'https://localhost:3001/api/cart/addToCart/',\r\n            data: {product_id: this.state.product.itemId, quantity: this.state.quantity}\r\n        }).then(response => {\r\n            this.setState({cart_feedback: \"Product added to card!\"})\r\n            this.props.handleAddToCartCallback(this.state.product, this.state.quantity);\r\n        }).catch(error => {\r\n            if(error.response){\r\n                console.log(error.response)\r\n            }else if (error.request) {\r\n                console.log(error.request);\r\n            }\r\n        })\r\n        this.setState({toggle_loading: false});\r\n    }\r\n\r\n    render() {\r\n        const {product,price} = this.state;\r\n        return (\r\n            <div className=\"productContainer\">\r\n                <div className=\"row\">\r\n                    <div className={\"col-lg-1\"}>\r\n\r\n                    </div>\r\n                    <div className=\"col-lg-3\">\r\n                        <h1 className=\"my-4\">ShopMet</h1>\r\n                        <div className=\"list-group\">\r\n                            <Link to=\"/\" className=\"list-group-item\" style={{color: \"black\"}}>Back</Link>\r\n                        </div>\r\n                </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"card mt-4\">\r\n                            <div className=\"card-img-top\" style={{height: 600}}>\r\n                                {this.state.loading_photo ? <LoadingSpinnerLargeSuccess/> :\r\n                                    <Carousel autoPlay=\"true\" showThumbs={false} infiniteLoop=\"true\">\r\n                                        {product.imageUrl &&\r\n                                        product.imageUrl.map((img, index) => (\r\n                                            <div key={index}>\r\n                                                <img className=\"fit-contain\"\r\n                                                     src={`data:img/${img.contentType};base64,${img.image.toString(\"base64\")}`}\r\n                                                     height={600}\r\n                                                />\r\n                                            </div>\r\n                                        ))\r\n                                        }\r\n                                    </Carousel>\r\n                                }\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <h3 className=\"card-title\">{product.name}</h3>\r\n                                {Object.values(price).map((price_mapped) => (<h4 className=\"price\" key=\"p\">${price_mapped}</h4>))}\r\n\r\n                                <p className=\"card-text\">{product.descriptionLong}</p>\r\n                                <p className=\"card-text\">{this.state.quantityOfProduct} left in stock</p>\r\n                                <div style={{display: 'flex'}}>\r\n                                    <div style={{width: '100px', height:'auto'}}>\r\n                                        <InputSpinner\r\n                                            className=\"InputSpinner\"\r\n                                            type=\"number\" size ={'sm'} variant={'dark'}\r\n                                            value={this.state.quantity} min={1}\r\n                                            onChange={(qty) => this.setState({...this.state, quantity: qty})}\r\n                                            max={this.state.quantityOfProduct} label=\"Quantity\"  precision={1} step={1}/>\r\n                                    </div>\r\n                                    {this.state.toggle_loading ? <LoadingSpinnerSuccessLongBtn/> :\r\n                                        <Button type=\"submit\" style={{ padding: '0 10px', marginLeft: '20px', width: '50%', fontSize: 'large'}} variant=\"success\"\r\n                                                onClick={this.postToCart}>Add to cart</Button>}\r\n                                </div>\r\n                                    <p className=\"card-text\">{this.state.cart_feedback}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card card-outline-secondary my-4\">\r\n                            <div className=\"card-header\">Product Reviews</div>\r\n                            <div className=\"card-body\">\r\n                                {product.reviews && product.reviews.map(review => (\r\n                                    <div key={review.Time} className=\"review\">\r\n                                        <p className=\"review_text\">{review.reviewText}</p>\r\n                                        <p className=\"star-ratings\">{review.rating} stars</p>\r\n                                        <small className=\"text-muted\">Posted by {review.user} on {review.Date}</small>\r\n                                        <hr/>\r\n                                    </div>\r\n                                    ))}\r\n                                <Link to={'/addReview/' + product.itemId} className=\"btn btn-success\">Leave a\r\n                                    Review</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"col-lg-1\"}>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Products\\addReview.jsx",["182","183"],"import React, {Component,} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default class AddReview extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dateTime: (new Date()).toDateString(),\r\n            message: '',\r\n            rating: '',\r\n            user_name: '',\r\n            email: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange = event => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const that = this;\r\n        await axios({\r\n            method: 'post',\r\n            url: '/api/products/addReview/'+this.props.match.params.itemId,\r\n            data: {\r\n                user: this.state.user_name,\r\n                reviewText: this.state.message,\r\n                rating: this.state.rating,\r\n            }\r\n        }).then(function(response){\r\n            console.log(\"Data: \", response.data);\r\n            this.setState({reviewText: response.data.message})\r\n        }).catch(function (error){\r\n            if (error.response){\r\n                console.log(error.response.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const that = this;\r\n        await axios({\r\n            method: \"get\",\r\n            url: 'https://localhost:3001/api/products/get/'+this.props.match.params.itemId,\r\n        }).then(function (response) {\r\n            that.setState({name: response.data.name,\r\n                image: \"data:image/png;base64,\"+response.data.imageUrl[0].image,\r\n                itemId: response.data.itemId});\r\n        }).catch(function (error) {\r\n            if (!error.data) {\r\n                console.log(error.data)\r\n            }\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    render() {\r\n    const { reviewStars } = this.state;\r\n    const options = [\r\n        {\r\n            label: \"1\",\r\n            value: \"1\",\r\n        }, {\r\n            label: \"2\",\r\n            value: \"2\",\r\n        }, {\r\n            label: \"3\",\r\n            value: \"3\",\r\n        }, {\r\n            label: \"4\",\r\n            value: \"4\",\r\n        }, {\r\n            label: \"5\",\r\n            value: \"5\",\r\n        }\r\n    ];\r\n    return(\r\n        <div className=\"review\">\r\n        <div className=\"container\">\r\n                        <div>\r\n                            <div width=\"100%\">\r\n                                <div className=\"row\">\r\n                                <div className=\"col-lg-6\">\r\n                                    <div className=\"card-header\">Add review for item {this.state.name}</div>\r\n                                    <div className=\"card-body\">\r\n                                    <form onSubmit={this.handleSubmit}>\r\n                                        <fieldset>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"col-md-9 control-label\">Full\r\n                                                    Name</label>\r\n                                                <div className=\"col-md-9\">\r\n                                                    <input type=\"text\" name=\"user_name\" onChange={this.handleChange} placeholder=\"Your name\"\r\n                                                           className=\"form-control\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"col-md-9 control-label\">Your\r\n                                                    E-mail</label>\r\n                                                <div className=\"col-md-9\">\r\n                                                    <input name=\"email\" type=\"text\" onChange={this.handleChange} placeholder=\"Your email\"\r\n                                                           className=\"form-control\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"col-md-9 control-label\">Your\r\n                                                    message</label>\r\n                                                <div className=\"col-md-9\">\r\n                                                    <textarea className=\"form-control\" onChange={this.handleChange} name=\"message\"\r\n                                                              placeholder=\"Please enter your feedback here...\"\r\n                                                              rows=\"5\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"rating\" htmlFor=\"message\">Your\r\n                                                    rating</label>\r\n                                                <div className=\"col-md-9\">\r\n                                                    <select name=\"rating\" className=\"star_rate\" value={reviewStars}\r\n                                                            onChange={this.handleChange}>\r\n                                                            {options.map((option) => (\r\n                                                                <option key={option.value} value={option.value}>\r\n                                                                    {option.label}</option>\r\n                                                            ))}\r\n                                                    </select>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <button type=\"submit\" className=\"btn btn-success\">Send review</button>\r\n                                        </fieldset>\r\n                                    </form>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"col-lg-6\">\r\n                                    <img className=\"card-img\" src={this.state.image} alt = \"picture of product\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\ShoppingCart\\ShoppingCart.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\UserProfile\\ProfileMain.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminLogin.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminPage.jsx",["184"],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Feedback\\DangerFeedback.jsx",["185"],"import React, {Component} from \"react\";\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\n\r\nclass DangerFeedback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Alert className=\"m-2\" variant=\"danger\">\r\n                <p>\r\n                    {this.props.feedback_error_text}\r\n                </p>\r\n            </Alert>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DangerFeedback;","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\ShoppingCart\\ShoppingCartObject.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Feedback\\SuccessFeedback.jsx",["186"],"import React, {Component} from \"react\";\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\n\r\nclass SuccessFeedback extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        /*\r\n        this.state = {\r\n            showingAlert: false\r\n        };\r\n\r\n         */\r\n    }\r\n/*\r\n\r\n    handleClickShowAlert() {\r\n        this.setState({\r\n            showingAlert: true\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                showingAlert: false\r\n            });\r\n        }, 10000);\r\n    }\r\n${this.state.showingAlert ? 'alert-shown' : 'alert-hidden'}\r\n */\r\n\r\n    render() {\r\n        return (\r\n            <Alert className =\"m-2\" variant=\"success\">\r\n                <p>\r\n                    {this.props.feedback_success_text}\r\n                </p>\r\n            </Alert>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SuccessFeedback;","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\UserProfile\\OrderPage.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerPrimaryLongBtn.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\UserProfile\\ProfilePage.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminAddNewEmployee.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminAddNewProduct.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminRestockProducts.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminEditProduct.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminEditEmployee.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Admin\\AdminRestockProduct.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerDangerShortBtn.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerPrimaryShortBtn.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerSuccessLongBtn.jsx",["187"],"import React, {Component} from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n\r\nclass LoadingSpinnerSuccessLongBtn extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button style={{ padding: '0 10px', marginLeft: '20px', width: '50%', fontSize: 'large'}} className=\"btn btn-success\" type=\"button\" disabled>\r\n                <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"/>\r\n                Loading...\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoadingSpinnerSuccessLongBtn;","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\UserProfile\\Order.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Webstore\\Home.jsx",["188","189","190","191","192"],"import React, {Component, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Navbar from \"./Navbar\";\r\nimport SignIn from \"../Authentication/SignIn\";\r\nimport SignUp from \"../Authentication/SignUp\";\r\n//import About from \"./about\";\r\nimport Mainpage from \"../Products/mainpage\";\r\nimport Footer from \"./Footer\";\r\nimport Productpage from \"../Products/productpage\";\r\nimport addReview from \"../Products/addReview\";\r\nimport ShoppingCart from \"../ShoppingCart/ShoppingCart\";\r\nimport Orders from \"../Orders\";\r\nimport Checkout from \"../ShoppingCart/Checkout\";\r\nimport ProfileMain from \"../UserProfile/ProfileMain\"\r\n\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        toggleLogin: false,\r\n        toggleRegister: false,\r\n        toggleShoppingCart: false,\r\n        toggleCheckOut: false,\r\n        toggleProfilePage: false,\r\n        isAuthenticated: false,\r\n        navbar_loading: false,\r\n        current_user: {},\r\n        empty_cart: true,\r\n        empty_cart_message: 'Nothing to show here.',\r\n        cart_objects: [],\r\n        cart_counter: 0,\r\n        cart_total_price: 0,\r\n        cart_error_feedback: false,\r\n        cart_success_feedback: false,\r\n        cart_feedback_text: String,\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        await this.Authenticated()\r\n    };\r\n\r\n    // Handlers\r\n    // Toggle windows.\r\n    handleToggleLoginCallback = () => {\r\n        this.setState({\r\n            toggleLogin: !this.state.toggleLogin,\r\n            toggleRegister: false,\r\n            toggleShoppingCart: false,\r\n            toggleCheckOut: false,\r\n            toggleProfilePage: false,\r\n        });\r\n    }\r\n    handleToggleRegisterCallback = () => {\r\n        this.setState({\r\n            toggleLogin: false,\r\n            toggleRegister: !this.state.toggleRegister,\r\n            toggleShoppingCart: false,\r\n            toggleCheckOut: false,\r\n            toggleProfilePage: false,\r\n        });\r\n    }\r\n    handleToggleShoppingCartCallback = () => {\r\n        this.setState({\r\n            toggleLogin: false,\r\n            toggleRegister: false,\r\n            toggleShoppingCart: !this.state.toggleShoppingCart,\r\n            toggleCheckOut: false,\r\n            toggleProfilePage: false,\r\n        });\r\n    }\r\n    handleToggleCheckOutCallback = () => {\r\n        this.setState({\r\n            toggleLogin: false,\r\n            toggleRegister: false,\r\n            toggleShoppingCart: false,\r\n            toggleCheckOut: !this.state.toggleCheckOut,\r\n            toggleProfilePage: false,\r\n        })\r\n    }\r\n    handleToggleProfilePageCallback = () => {\r\n        this.setState({\r\n            toggleLogin: false,\r\n            toggleRegister: false,\r\n            toggleShoppingCart: false,\r\n            toggleCheckOut: false,\r\n            toggleProfilePage: !this.state.toggleProfilePage,\r\n        })\r\n    }\r\n\r\n    // Handle cart\r\n    handleQuantityIncreaseCallback = async item_id => {\r\n        const cart_objects = [...this.state.cart_objects];\r\n        const index = cart_objects.findIndex(i => i.itemId === item_id)\r\n        cart_objects[index].quantity++;\r\n        await axios({\r\n            method: 'post',\r\n            url: 'https://localhost:3001/api/cart/addToCart',\r\n            data: {\r\n                product_id: cart_objects[index].itemId,\r\n                quantity: 1\r\n            },\r\n        }).then(r => {\r\n            this.updateCartCounterAndPrice(cart_objects);\r\n            this.setState({cart_objects})\r\n        })\r\n    }\r\n    handleQuantityDecreaseCallback = async item_id => {\r\n        const cart_objects = [...this.state.cart_objects];\r\n        const index = cart_objects.findIndex(i => i.itemId === item_id)\r\n        if (cart_objects[index].quantity > 0) {\r\n            cart_objects[index].quantity--;\r\n            await axios({\r\n                method: 'put',\r\n                url: 'https://localhost:3001/api/cart/deleteFromCart',\r\n                data: {\r\n                    product_id: cart_objects[index].itemId,\r\n                    quantity: 1\r\n                },\r\n            }).then(r => {\r\n                this.updateCartCounterAndPrice(cart_objects);\r\n                this.setState({cart_objects});\r\n            })\r\n        }\r\n    }\r\n    handleAddToCartCallback = (product, quantity) => {\r\n        const Product = product;\r\n        Product.quantity = quantity;\r\n        Product.price = Object.values(product.price);\r\n\r\n        const cart_objects = [...this.state.cart_objects, Product];\r\n        this.updateCartCounterAndPrice(cart_objects);\r\n        this.setState({\r\n            cart_objects,\r\n            empty_cart: false\r\n        })\r\n    }\r\n    handleOrderCompleteCallback = user => {\r\n        this.getCartObjects(user)\r\n        const cart_objects = [...user.cart]\r\n        this.updateCartCounterAndPrice(cart_objects)\r\n        this.setState({cart_objects, empty_cart: true})\r\n    }\r\n\r\n\r\n    // Handle authentication.\r\n    handleLoginCallback = user => {\r\n        const current_user = user;\r\n        this.setState({current_user, isAuthenticated: true});\r\n        this.getCartObjects(current_user);\r\n        this.setState({toggleLogin: false});\r\n    };\r\n    handleLogoutCallback = async () => {\r\n        await axios({\r\n            method: 'post',\r\n            url: 'https://localhost:3001/logout',\r\n            data: {}\r\n        }).then(() => {\r\n            const cart_objects = [];\r\n            this.updateCartCounterAndPrice(cart_objects);\r\n            this.setState({\r\n                current_user: {},\r\n                isAuthenticated: false,\r\n                toggleShoppingCart: false,\r\n                toggleProfilePage: false,\r\n            });\r\n        })\r\n    };\r\n    Authenticated = async () => {\r\n        this.setState({navbar_loading: true})\r\n        await axios.get('https://localhost:3001/api/users/isAuthenticated')\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    // Session is auth\r\n                    const current_user = response.data;\r\n                    this.getCartObjects(current_user);\r\n                    this.setState({\r\n                        current_user,\r\n                        isAuthenticated: true,\r\n                        navbar_loading: false,\r\n                    });\r\n                } else if (response.status === 206) {\r\n                    // Session is not auth but has items in cart\r\n                    this.state.empty_cart = false;\r\n                    const cart_objects = [...response.data.Cart];\r\n                    this.updateCartCounterAndPrice(cart_objects);\r\n                    this.setState({\r\n                        cart_objects,\r\n                        current_user: {},\r\n                        isAuthenticated: false,\r\n                        navbar_loading: false,\r\n                    });\r\n                } else {\r\n                    // Session is not auth and has no items in cart\r\n                    this.setState({\r\n                        current_user: {},\r\n                        isAuthenticated: false,\r\n                        navbar_loading: false,\r\n                    });\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.setState({\r\n                    current_user: {},\r\n                    isAuthenticated: false,\r\n                    navbar_loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    // Cart\r\n    // Instantiate Cart\r\n    getCartObjects = user => {\r\n        if (user.cart.length === 0) {\r\n            this.state.empty_cart = true;\r\n            this.state.empty_cart_message = 'There is nothing to see here!';\r\n            return true;\r\n        } else {\r\n            this.state.empty_cart = false;\r\n            const cart_objects = [...user.cart];\r\n            this.updateCartCounterAndPrice(cart_objects);\r\n            this.setState({cart_objects});\r\n            return false;\r\n        }\r\n    };\r\n    // Updating cart values for the navbar.\r\n    updateCartCounterAndPrice = cartArray => {\r\n        let cart_counter = 0;\r\n        let cart_total_price = 0;\r\n        cartArray.forEach(product => {\r\n            cart_counter += parseInt(product.quantity);\r\n            cart_total_price += parseInt(product.price) * parseInt(product.quantity)\r\n\r\n        });\r\n        this.setState({cart_counter, cart_total_price})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <React.Fragment>\r\n                    <Navbar\r\n                        toggleLoginCallback={this.handleToggleLoginCallback}\r\n                        toggleRegisterCallback={this.handleToggleRegisterCallback}\r\n                        toggleShoppingCartCallback={this.handleToggleShoppingCartCallback}\r\n                        toggleProfilePageCallback={this.handleToggleProfilePageCallback}\r\n                        isAuthenticated={this.state.isAuthenticated}\r\n                        loading={this.state.navbar_loading}\r\n                        current_user={this.state.current_user}\r\n                        cart_counter={this.state.cart_counter}\r\n                        cart_total_price={this.state.cart_total_price}\r\n                    />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Mainpage}/>\r\n                        <Route exact path=\"/products/:itemId\" component={() =>\r\n                            <Productpage itemId={window.location.href.split('/').pop()}\r\n                                         handleAddToCartCallback={this.handleAddToCartCallback}/>}/>\r\n                        <Route path=\"/addReview/:itemId\" component={addReview}/>\r\n                        <Route path=\"/orders/\" component={() =>\r\n                            <Orders current_user={this.state.current_user}\r\n                                    isAuthenticated={this.state.isAuthenticated}/>}/>\r\n                    </Switch>\r\n                    {this.state.toggleLogin && <SignIn\r\n                        loginCallback={this.handleLoginCallback}\r\n                        close={this.handleToggleLoginCallback}\r\n                    />}\r\n                    {this.state.toggleRegister && <SignUp\r\n                        close={this.handleToggleRegisterCallback}\r\n                    />}\r\n                    {this.state.toggleProfilePage && <ProfileMain\r\n                        close={this.handleToggleProfilePageCallback}\r\n                        handleLogout={this.handleLogoutCallback}\r\n                        current_user={this.state.current_user}\r\n                    />}\r\n                    {this.state.toggleCheckOut && <Checkout\r\n                        cart_objects={this.state.cart_objects}\r\n                        current_user={this.state.current_user}\r\n                        price_total={this.state.cart_total_price}\r\n                        signed_in={this.state.isAuthenticated}\r\n                        order_complete={this.handleOrderCompleteCallback}\r\n                        close={this.handleToggleCheckOutCallback}\r\n                    />}\r\n                    {this.state.toggleShoppingCart &&\r\n                    <ShoppingCart\r\n                        handleAddToCartCallback={this.handleAddToCartCallback}\r\n                        quantity_increase={this.handleQuantityIncreaseCallback}\r\n                        quantity_decrease={this.handleQuantityDecreaseCallback}\r\n                        onCheckOut={this.handleToggleCheckOutCallback}\r\n                        close={this.handleToggleShoppingCartCallback}\r\n                        empty_cart={this.state.empty_cart}\r\n                        empty_cart_message={this.state.empty_cart_message}\r\n                        cart_objects={this.state.cart_objects}\r\n                        cart_total_price={this.state.cart_total_price}\r\n                        toggle_error_feedback={this.state.cart_error_feedback}\r\n                        toggle_success_feedback={this.state.cart_success_feedback}\r\n                        feedback_text={this.state.cart_feedback_text}\r\n                    />\r\n                    }\r\n                    <Footer toggle_admin={this.props.toggle_admin}/>\r\n                </React.Fragment>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\n// <About/>\r\n\r\nexport default Home;","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Orders.jsx",["193","194"],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Webstore\\Navbar.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Webstore\\Footer.jsx",["195"],"import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <footer className=\"py-5 bg-dark\">\r\n                <div className=\"row m-2\">\r\n                    <div className=\"col-md-3\"/>\r\n                    <div className=\"col-md-6 text-center\">\r\n                        <button onClick={this.props.toggle_admin} className=\"btn btn-info text-white\">\r\n                            Admin\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-3\"/>\r\n                </div>\r\n                <div className=\"row m-2\">\r\n                    <div className=\"col-12\">\r\n                        <p className=\"m-0 text-center text-white\">Copyright &copy; ShopMet 2021</p>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\nexport default Footer;","C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\ShoppingCart\\Checkout.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerSmallLight.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerLargeDark.jsx",[],"C:\\OsloMet\\2020-2021\\Datanettverk\\portfolio2-group7\\client\\src\\Components\\Spinners\\LoadingSpinnerLargeSuccess.jsx",[],{"ruleId":"196","severity":1,"message":"197","line":7,"column":5,"nodeType":"198","messageId":"199","endLine":9,"endColumn":6},{"ruleId":"196","severity":1,"message":"197","line":7,"column":5,"nodeType":"198","messageId":"199","endLine":9,"endColumn":6},{"ruleId":"200","severity":1,"message":"201","line":22,"column":32,"nodeType":"202","endLine":22,"endColumn":74},{"ruleId":"200","severity":1,"message":"201","line":34,"column":32,"nodeType":"202","endLine":34,"endColumn":74},{"ruleId":"200","severity":1,"message":"201","line":46,"column":32,"nodeType":"202","endLine":46,"endColumn":74},{"ruleId":"203","severity":1,"message":"204","line":1,"column":27,"nodeType":"205","messageId":"206","endLine":1,"endColumn":35},{"ruleId":"203","severity":1,"message":"207","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":13},{"ruleId":"208","severity":1,"message":"209","line":99,"column":41,"nodeType":"202","endLine":100,"endColumn":86},{"ruleId":"208","severity":1,"message":"209","line":84,"column":41,"nodeType":"202","endLine":85,"endColumn":86},{"ruleId":"203","severity":1,"message":"210","line":11,"column":8,"nodeType":"205","messageId":"206","endLine":11,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":83,"column":49,"nodeType":"202","endLine":86,"endColumn":51},{"ruleId":"203","severity":1,"message":"211","line":29,"column":15,"nodeType":"205","messageId":"206","endLine":29,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":142,"column":37,"nodeType":"202","endLine":142,"endColumn":114},{"ruleId":"196","severity":1,"message":"197","line":14,"column":5,"nodeType":"198","messageId":"199","endLine":16,"endColumn":6},{"ruleId":"196","severity":1,"message":"197","line":6,"column":5,"nodeType":"198","messageId":"199","endLine":8,"endColumn":6},{"ruleId":"196","severity":1,"message":"197","line":6,"column":5,"nodeType":"198","messageId":"199","endLine":14,"endColumn":6},{"ruleId":"203","severity":1,"message":"214","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":15},{"ruleId":"203","severity":1,"message":"215","line":1,"column":27,"nodeType":"205","messageId":"206","endLine":1,"endColumn":36},{"ruleId":"196","severity":1,"message":"197","line":19,"column":5,"nodeType":"198","messageId":"199","endLine":21,"endColumn":6},{"ruleId":"216","severity":1,"message":"217","line":219,"column":13,"nodeType":"218","messageId":"219","endLine":219,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":220,"column":13,"nodeType":"218","messageId":"219","endLine":220,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":223,"column":13,"nodeType":"218","messageId":"219","endLine":223,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":1,"column":27,"nodeType":"205","messageId":"206","endLine":1,"endColumn":35},{"ruleId":"203","severity":1,"message":"207","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":13},{"ruleId":"196","severity":1,"message":"197","line":4,"column":5,"nodeType":"198","messageId":"199","endLine":7,"endColumn":6},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'LoadingSpinnerSmallLight' is defined but never used.","'that' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Button' is defined but never used.","'useEffect' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation"]
{"ast":null,"code":"'use strict'; // We have an ES6 Map available, return the native instance\n\nif (typeof global.Map !== 'undefined') {\n  module.exports = global.Map;\n  module.exports.Map = global.Map;\n} else {\n  // We will return a polyfill\n  var Map = function (array) {\n    this._keys = [];\n    this._values = {};\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] == null) continue; // skip null and undefined\n\n      var entry = array[i];\n      var key = entry[0];\n      var value = entry[1]; // Add the key to the list of keys in order\n\n      this._keys.push(key); // Add the key and value to the values dictionary with a point\n      // to the location in the ordered keys list\n\n\n      this._values[key] = {\n        v: value,\n        i: this._keys.length - 1\n      };\n    }\n  };\n\n  Map.prototype.clear = function () {\n    this._keys = [];\n    this._values = {};\n  };\n\n  Map.prototype.delete = function (key) {\n    var value = this._values[key];\n    if (value == null) return false; // Delete entry\n\n    delete this._values[key]; // Remove the key from the ordered keys list\n\n    this._keys.splice(value.i, 1);\n\n    return true;\n  };\n\n  Map.prototype.entries = function () {\n    var self = this;\n    var index = 0;\n    return {\n      next: function () {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? [key, self._values[key].v] : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  Map.prototype.forEach = function (callback, self) {\n    self = self || this;\n\n    for (var i = 0; i < this._keys.length; i++) {\n      var key = this._keys[i]; // Call the forEach callback\n\n      callback.call(self, this._values[key].v, key, self);\n    }\n  };\n\n  Map.prototype.get = function (key) {\n    return this._values[key] ? this._values[key].v : undefined;\n  };\n\n  Map.prototype.has = function (key) {\n    return this._values[key] != null;\n  };\n\n  Map.prototype.keys = function () {\n    var self = this;\n    var index = 0;\n    return {\n      next: function () {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? key : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  Map.prototype.set = function (key, value) {\n    if (this._values[key]) {\n      this._values[key].v = value;\n      return this;\n    } // Add the key to the list of keys in order\n\n\n    this._keys.push(key); // Add the key and value to the values dictionary with a point\n    // to the location in the ordered keys list\n\n\n    this._values[key] = {\n      v: value,\n      i: this._keys.length - 1\n    };\n    return this;\n  };\n\n  Map.prototype.values = function () {\n    var self = this;\n    var index = 0;\n    return {\n      next: function () {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? self._values[key].v : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  }; // Last ismaster\n\n\n  Object.defineProperty(Map.prototype, 'size', {\n    enumerable: true,\n    get: function () {\n      return this._keys.length;\n    }\n  });\n  module.exports = Map;\n  module.exports.Map = Map;\n}","map":{"version":3,"sources":["C:/Users/Tanja Aakerholt/Documents/GitHub/portfolio2/client/node_modules/bson/lib/bson/map.js"],"names":["global","Map","module","exports","array","_keys","_values","i","length","entry","key","value","push","v","prototype","clear","delete","splice","entries","self","index","next","undefined","done","forEach","callback","call","get","has","keys","set","values","Object","defineProperty","enumerable"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\n// We have an ES6 Map available, return the native instance\r\nif (typeof global.Map !== 'undefined') {\r\n  module.exports = global.Map;\r\n  module.exports.Map = global.Map;\r\n} else {\r\n  // We will return a polyfill\r\n  var Map = function(array) {\r\n    this._keys = [];\r\n    this._values = {};\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n      if (array[i] == null) continue; // skip null and undefined\r\n      var entry = array[i];\r\n      var key = entry[0];\r\n      var value = entry[1];\r\n      // Add the key to the list of keys in order\r\n      this._keys.push(key);\r\n      // Add the key and value to the values dictionary with a point\r\n      // to the location in the ordered keys list\r\n      this._values[key] = { v: value, i: this._keys.length - 1 };\r\n    }\r\n  };\r\n\r\n  Map.prototype.clear = function() {\r\n    this._keys = [];\r\n    this._values = {};\r\n  };\r\n\r\n  Map.prototype.delete = function(key) {\r\n    var value = this._values[key];\r\n    if (value == null) return false;\r\n    // Delete entry\r\n    delete this._values[key];\r\n    // Remove the key from the ordered keys list\r\n    this._keys.splice(value.i, 1);\r\n    return true;\r\n  };\r\n\r\n  Map.prototype.entries = function() {\r\n    var self = this;\r\n    var index = 0;\r\n\r\n    return {\r\n      next: function() {\r\n        var key = self._keys[index++];\r\n        return {\r\n          value: key !== undefined ? [key, self._values[key].v] : undefined,\r\n          done: key !== undefined ? false : true\r\n        };\r\n      }\r\n    };\r\n  };\r\n\r\n  Map.prototype.forEach = function(callback, self) {\r\n    self = self || this;\r\n\r\n    for (var i = 0; i < this._keys.length; i++) {\r\n      var key = this._keys[i];\r\n      // Call the forEach callback\r\n      callback.call(self, this._values[key].v, key, self);\r\n    }\r\n  };\r\n\r\n  Map.prototype.get = function(key) {\r\n    return this._values[key] ? this._values[key].v : undefined;\r\n  };\r\n\r\n  Map.prototype.has = function(key) {\r\n    return this._values[key] != null;\r\n  };\r\n\r\n  Map.prototype.keys = function() {\r\n    var self = this;\r\n    var index = 0;\r\n\r\n    return {\r\n      next: function() {\r\n        var key = self._keys[index++];\r\n        return {\r\n          value: key !== undefined ? key : undefined,\r\n          done: key !== undefined ? false : true\r\n        };\r\n      }\r\n    };\r\n  };\r\n\r\n  Map.prototype.set = function(key, value) {\r\n    if (this._values[key]) {\r\n      this._values[key].v = value;\r\n      return this;\r\n    }\r\n\r\n    // Add the key to the list of keys in order\r\n    this._keys.push(key);\r\n    // Add the key and value to the values dictionary with a point\r\n    // to the location in the ordered keys list\r\n    this._values[key] = { v: value, i: this._keys.length - 1 };\r\n    return this;\r\n  };\r\n\r\n  Map.prototype.values = function() {\r\n    var self = this;\r\n    var index = 0;\r\n\r\n    return {\r\n      next: function() {\r\n        var key = self._keys[index++];\r\n        return {\r\n          value: key !== undefined ? self._values[key].v : undefined,\r\n          done: key !== undefined ? false : true\r\n        };\r\n      }\r\n    };\r\n  };\r\n\r\n  // Last ismaster\r\n  Object.defineProperty(Map.prototype, 'size', {\r\n    enumerable: true,\r\n    get: function() {\r\n      return this._keys.length;\r\n    }\r\n  });\r\n\r\n  module.exports = Map;\r\n  module.exports.Map = Map;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}
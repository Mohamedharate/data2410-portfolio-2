{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanja\\\\IdeaProjects\\\\portfolio2\\\\client\\\\src\\\\Components\\\\Admin\\\\AdminRestockProducts.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport AdminRestockProduct from \"./AdminRestockProduct\";\nimport LoadingSpinnerBtn from \"../LoadingSpinnerBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AdminRestockProducts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      toggle_loading: false\n    };\n\n    this.handleGetProducts = () => {\n      this.getProducts().then();\n    };\n\n    this.handleAddStockCallback = (product, value) => {\n      console.log(\"click\", product);\n\n      if (value != null) {\n        const products = [...this.state.products];\n        const index = products.findIndex(i => i._id === product);\n        products[index].quantity = parseInt(products[index].quantity) + parseInt(value);\n        this.setState({\n          products\n        });\n        this.updateStock(products[index].quantity, products[index].itemId).then();\n      } else {\n        console.error(\"Give number property to Quantity!\");\n      }\n    };\n\n    this.handleRemoveStockCallback = (product, value) => {\n      if (value != null) {\n        const products = [...this.state.products];\n        const index = products.findIndex(i => i._id === product);\n        products[index].quantity = parseInt(products[index].quantity) - parseInt(value);\n        this.setState({\n          products\n        });\n        this.updateStock(products[index].quantity, products[index].itemId).then();\n      } else {\n        console.error(\"Give number property to Quantity!\");\n      }\n    };\n\n    this.getProducts = async () => {\n      this.setState({\n        toggle_loading: true\n      });\n      await axios.get('http://localhost:3001/api/products/get/allProductsPure').then(res => {\n        const products = res.data;\n        this.setState({\n          products\n        });\n      }).catch(err => {\n        this.setState({\n          toggle_success_feedback: false,\n          toggle_error_feedback: true,\n          feedback_text: err.response.data.Error\n        });\n      });\n      this.setState({\n        toggle_loading: false\n      });\n    };\n  }\n\n  async updateStock(data, itemId) {\n    await axios({\n      method: 'put',\n      url: `http://localhost:3001/api/products/update/${itemId}`,\n      data: {\n        quantity: data\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row text-center m-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Restock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: this.state.toggle_loading ? /*#__PURE__*/_jsxDEV(LoadingSpinnerBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 54\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleGetProducts,\n            className: \"btn btn-primary btn-block\",\n            children: \"Get Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: this.state.products.map((product, index) => /*#__PURE__*/_jsxDEV(AdminRestockProduct, {\n            product: product,\n            addStock: this.handleAddStockCallback,\n            removeStock: this.handleRemoveStockCallback\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AdminRestockProducts;","map":{"version":3,"sources":["C:/Users/Tanja/IdeaProjects/portfolio2/client/src/Components/Admin/AdminRestockProducts.jsx"],"names":["React","Component","axios","AdminRestockProduct","LoadingSpinnerBtn","AdminRestockProducts","state","products","toggle_loading","handleGetProducts","getProducts","then","handleAddStockCallback","product","value","console","log","index","findIndex","i","_id","quantity","parseInt","setState","updateStock","itemId","error","handleRemoveStockCallback","get","res","data","catch","err","toggle_success_feedback","toggle_error_feedback","feedback_text","response","Error","method","url","render","map"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\nimport AdminRestockProduct from \"./AdminRestockProduct\";\r\nimport LoadingSpinnerBtn from \"../LoadingSpinnerBtn\";\r\n\r\nclass AdminRestockProducts extends Component {\r\n    state = {\r\n        products: [],\r\n        toggle_loading: false,\r\n    };\r\n\r\n    handleGetProducts = () => {\r\n        this.getProducts().then()\r\n    };\r\n    handleAddStockCallback = (product, value) => {\r\n        console.log(\"click\", product)\r\n        if (value != null) {\r\n            const products = [...this.state.products];\r\n            const index = products.findIndex(i => i._id === product)\r\n            products[index].quantity = parseInt(products[index].quantity) + parseInt(value);\r\n            this.setState({products})\r\n            this.updateStock(products[index].quantity, products[index].itemId).then()\r\n        } else {\r\n            console.error(\"Give number property to Quantity!\")\r\n        }\r\n    };\r\n\r\n    handleRemoveStockCallback = (product, value) => {\r\n        if (value != null) {\r\n            const products = [...this.state.products];\r\n            const index = products.findIndex(i => i._id === product)\r\n            products[index].quantity = parseInt(products[index].quantity) - parseInt(value);\r\n            this.setState({products})\r\n            this.updateStock(products[index].quantity, products[index].itemId).then()\r\n        } else {\r\n            console.error(\"Give number property to Quantity!\")\r\n        }\r\n    };\r\n\r\n    getProducts = async () => {\r\n        this.setState({toggle_loading: true});\r\n        await axios.get('http://localhost:3001/api/products/get/allProductsPure')\r\n            .then(res => {\r\n                const products = res.data;\r\n                this.setState({products})\r\n            }).catch(err => {\r\n                this.setState({\r\n                    toggle_success_feedback: false,\r\n                    toggle_error_feedback: true,\r\n                    feedback_text: err.response.data.Error,\r\n                })\r\n            });\r\n        this.setState({toggle_loading: false});\r\n    };\r\n\r\n    async updateStock(data, itemId) {\r\n        await axios({\r\n            method: 'put',\r\n            url: `http://localhost:3001/api/products/update/${itemId}`,\r\n            data: {\r\n                quantity: data\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row text-center m-5\">\r\n                    <div className=\"col-md-4\"/>\r\n                    <div className=\"col-md-4\">\r\n                        <h3>Restock</h3>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        {this.state.toggle_loading ? <LoadingSpinnerBtn/> :\r\n                            <button onClick={this.handleGetProducts} className=\"btn btn-primary btn-block\">\r\n                                Get Products\r\n                            </button>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row text-center\">\r\n                    <div className=\"col-12\">\r\n                        {this.state.products.map((product, index) => (\r\n                            <AdminRestockProduct\r\n                                key={index}\r\n                                product={product}\r\n                                addStock={this.handleAddStockCallback}\r\n                                removeStock={this.handleRemoveStockCallback}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminRestockProducts;"]},"metadata":{},"sourceType":"module"}
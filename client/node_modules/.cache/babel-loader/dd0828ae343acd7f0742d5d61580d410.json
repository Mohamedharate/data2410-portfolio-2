{"ast":null,"code":"'use strict';\n\nconst MongoError = require('../core').MongoError;\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst insertDocuments = require('./common_functions').insertDocuments;\n\nclass InsertOneOperation extends OperationBase {\n  constructor(collection, doc, options) {\n    super(options);\n    this.collection = collection;\n    this.doc = doc;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const doc = this.doc;\n    const options = this.options;\n\n    if (Array.isArray(doc)) {\n      return callback(MongoError.create({\n        message: 'doc parameter must be an object',\n        driver: true\n      }));\n    }\n\n    insertDocuments(coll, [doc], options, (err, r) => {\n      if (callback == null) return;\n      if (err && callback) return callback(err); // Workaround for pre 2.6 servers\n\n      if (r == null) return callback(null, {\n        result: {\n          ok: 1\n        }\n      }); // Add values to top level to ensure crud spec compatibility\n\n      r.insertedCount = r.result.n;\n      r.insertedId = doc._id;\n      if (callback) callback(null, r);\n    });\n  }\n\n}\n\nmodule.exports = InsertOneOperation;","map":{"version":3,"sources":["C:/Users/Tanja Aakerholt/Documents/GitHub/portfolio2/client/node_modules/mongodb/lib/operations/insert_one.js"],"names":["MongoError","require","OperationBase","insertDocuments","InsertOneOperation","constructor","collection","doc","options","execute","callback","coll","Array","isArray","create","message","driver","err","r","result","ok","insertedCount","n","insertedId","_id","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,UAAtC;;AACA,MAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,MAAMC,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BE,eAAtD;;AAEA,MAAMC,kBAAN,SAAiCF,aAAjC,CAA+C;AAC7CG,EAAAA,WAAW,CAACC,UAAD,EAAaC,GAAb,EAAkBC,OAAlB,EAA2B;AACpC,UAAMA,OAAN;AAEA,SAAKF,UAAL,GAAkBA,UAAlB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACD;;AAEDE,EAAAA,OAAO,CAACC,QAAD,EAAW;AAChB,UAAMC,IAAI,GAAG,KAAKL,UAAlB;AACA,UAAMC,GAAG,GAAG,KAAKA,GAAjB;AACA,UAAMC,OAAO,GAAG,KAAKA,OAArB;;AAEA,QAAII,KAAK,CAACC,OAAN,CAAcN,GAAd,CAAJ,EAAwB;AACtB,aAAOG,QAAQ,CACbV,UAAU,CAACc,MAAX,CAAkB;AAAEC,QAAAA,OAAO,EAAE,iCAAX;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAAlB,CADa,CAAf;AAGD;;AAEDb,IAAAA,eAAe,CAACQ,IAAD,EAAO,CAACJ,GAAD,CAAP,EAAcC,OAAd,EAAuB,CAACS,GAAD,EAAMC,CAAN,KAAY;AAChD,UAAIR,QAAQ,IAAI,IAAhB,EAAsB;AACtB,UAAIO,GAAG,IAAIP,QAAX,EAAqB,OAAOA,QAAQ,CAACO,GAAD,CAAf,CAF2B,CAGhD;;AACA,UAAIC,CAAC,IAAI,IAAT,EAAe,OAAOR,QAAQ,CAAC,IAAD,EAAO;AAAES,QAAAA,MAAM,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN;AAAV,OAAP,CAAf,CAJiC,CAKhD;;AACAF,MAAAA,CAAC,CAACG,aAAF,GAAkBH,CAAC,CAACC,MAAF,CAASG,CAA3B;AACAJ,MAAAA,CAAC,CAACK,UAAF,GAAehB,GAAG,CAACiB,GAAnB;AACA,UAAId,QAAJ,EAAcA,QAAQ,CAAC,IAAD,EAAOQ,CAAP,CAAR;AACf,KATc,CAAf;AAUD;;AA7B4C;;AAgC/CO,MAAM,CAACC,OAAP,GAAiBtB,kBAAjB","sourcesContent":["'use strict';\r\n\r\nconst MongoError = require('../core').MongoError;\r\nconst OperationBase = require('./operation').OperationBase;\r\nconst insertDocuments = require('./common_functions').insertDocuments;\r\n\r\nclass InsertOneOperation extends OperationBase {\r\n  constructor(collection, doc, options) {\r\n    super(options);\r\n\r\n    this.collection = collection;\r\n    this.doc = doc;\r\n  }\r\n\r\n  execute(callback) {\r\n    const coll = this.collection;\r\n    const doc = this.doc;\r\n    const options = this.options;\r\n\r\n    if (Array.isArray(doc)) {\r\n      return callback(\r\n        MongoError.create({ message: 'doc parameter must be an object', driver: true })\r\n      );\r\n    }\r\n\r\n    insertDocuments(coll, [doc], options, (err, r) => {\r\n      if (callback == null) return;\r\n      if (err && callback) return callback(err);\r\n      // Workaround for pre 2.6 servers\r\n      if (r == null) return callback(null, { result: { ok: 1 } });\r\n      // Add values to top level to ensure crud spec compatibility\r\n      r.insertedCount = r.result.n;\r\n      r.insertedId = doc._id;\r\n      if (callback) callback(null, r);\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = InsertOneOperation;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict'; // async function* asyncIterator() {\n//   while (true) {\n//     const value = await this.next();\n//     if (!value) {\n//       await this.close();\n//       return;\n//     }\n//     yield value;\n//   }\n// }\n// TODO: change this to the async generator function above\n\nfunction asyncIterator() {\n  const cursor = this;\n  return {\n    next: function () {\n      return Promise.resolve().then(() => cursor.next()).then(value => {\n        if (!value) {\n          return cursor.close().then(() => ({\n            value,\n            done: true\n          }));\n        }\n\n        return {\n          value,\n          done: false\n        };\n      });\n    }\n  };\n}\n\nexports.asyncIterator = asyncIterator;","map":{"version":3,"sources":["C:/Users/Tanja Aakerholt/Documents/GitHub/portfolio2/client/node_modules/mongodb/lib/async/async_iterator.js"],"names":["asyncIterator","cursor","next","Promise","resolve","then","value","close","done","exports"],"mappings":"AAAA,a,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA,SAASA,aAAT,GAAyB;AACvB,QAAMC,MAAM,GAAG,IAAf;AAEA,SAAO;AACLC,IAAAA,IAAI,EAAE,YAAW;AACf,aAAOC,OAAO,CAACC,OAAR,GACJC,IADI,CACC,MAAMJ,MAAM,CAACC,IAAP,EADP,EAEJG,IAFI,CAECC,KAAK,IAAI;AACb,YAAI,CAACA,KAAL,EAAY;AACV,iBAAOL,MAAM,CAACM,KAAP,GAAeF,IAAf,CAAoB,OAAO;AAAEC,YAAAA,KAAF;AAASE,YAAAA,IAAI,EAAE;AAAf,WAAP,CAApB,CAAP;AACD;;AACD,eAAO;AAAEF,UAAAA,KAAF;AAASE,UAAAA,IAAI,EAAE;AAAf,SAAP;AACD,OAPI,CAAP;AAQD;AAVI,GAAP;AAYD;;AAEDC,OAAO,CAACT,aAAR,GAAwBA,aAAxB","sourcesContent":["'use strict';\r\n\r\n// async function* asyncIterator() {\r\n//   while (true) {\r\n//     const value = await this.next();\r\n//     if (!value) {\r\n//       await this.close();\r\n//       return;\r\n//     }\r\n\r\n//     yield value;\r\n//   }\r\n// }\r\n\r\n// TODO: change this to the async generator function above\r\nfunction asyncIterator() {\r\n  const cursor = this;\r\n\r\n  return {\r\n    next: function() {\r\n      return Promise.resolve()\r\n        .then(() => cursor.next())\r\n        .then(value => {\r\n          if (!value) {\r\n            return cursor.close().then(() => ({ value, done: true }));\r\n          }\r\n          return { value, done: false };\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\nexports.asyncIterator = asyncIterator;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanja\\\\IdeaProjects\\\\portfolio2\\\\client\\\\src\\\\Components\\\\home.jsx\";\nimport React, { Component, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from \"./navbar\";\nimport Login from \"./login\";\nimport Register from \"./register\";\nimport About from \"./about\";\nimport Mainpage from \"./Products/mainpage\";\nimport Footer from \"./footer\";\nimport Productpage from \"./Products/productpage\";\nimport addReview from \"./Products/addReview\";\nimport ShoppingCart from \"./shoppingCart\";\nimport Orders from \"./orders\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleLogin: false,\n      toggleRegister: false,\n      toggleShoppingCart: false,\n      isAuthenticated: false,\n      current_user: {},\n      empty_cart: false,\n      empty_cart_message: 'Nothing to show here.',\n      cart_objects: [],\n      cart_counter: 0,\n      cart_total_price: 0,\n      cart_error_feedback: false,\n      cart_success_feedback: false,\n      cart_feedback_text: String\n    };\n\n    this.componentDidMount = async () => {\n      this.Authenticated();\n    };\n\n    this.handleToggleLoginCallback = () => {\n      this.setState({\n        toggleLogin: !this.state.toggleLogin,\n        toggleRegister: false\n      });\n    };\n\n    this.handleToggleRegisterCallback = () => {\n      this.setState({\n        toggleLogin: false,\n        toggleRegister: !this.state.toggleRegister\n      });\n    };\n\n    this.handleToggleShoppingCartCallback = () => {\n      this.setState({\n        toggleShoppingCart: !this.state.toggleShoppingCart\n      });\n    };\n\n    this.handleQuantityIncreaseCallback = async item_id => {\n      const cart_objects = [...this.state.cart_objects];\n      const index = cart_objects.findIndex(i => i.itemId === item_id);\n      cart_objects[index].quantity++;\n      await axios({\n        method: 'post',\n        url: 'http://localhost:3001/api/cart/addToCart',\n        data: {\n          product_id: cart_objects[index].itemId,\n          quantity: 1\n        }\n      }).then(r => {\n        this.updateCartCounterAndPrice(cart_objects);\n        this.setState({\n          cart_objects\n        });\n      });\n    };\n\n    this.handleQuantityDecreaseCallback = async item_id => {\n      const cart_objects = [...this.state.cart_objects];\n      const index = cart_objects.findIndex(i => i.itemId === item_id);\n\n      if (cart_objects[index].quantity > 0) {\n        cart_objects[index].quantity--;\n        await axios({\n          method: 'put',\n          url: 'http://localhost:3001/api/cart/deleteFromCart',\n          data: {\n            product_id: cart_objects[index].itemId,\n            quantity: 1\n          }\n        }).then(r => {\n          this.updateCartCounterAndPrice(cart_objects);\n          this.setState({\n            cart_objects\n          });\n        });\n      }\n    };\n\n    this.handleAddToCartCallback = (product, quantity) => {\n      console.log(\"add to cart\");\n      const Product = product;\n      Product.quantity = quantity;\n      const cart_objects = [...this.state.cart_objects, Product];\n      this.updateCartCounterAndPrice(cart_objects);\n      this.setState({\n        cart_objects\n      });\n    };\n\n    this.handleCheckOutCallback = async () => {\n      console.log(\"checkout\");\n      this.placeNewOrder(); //TODO Her mÃ¥ det lages et Checkout vindu som tar inn informasjon om levering.\n    };\n\n    this.handleLoginCallback = user => {\n      const current_user = user;\n      this.setState({\n        current_user,\n        isAuthenticated: true\n      });\n      this.getCartObjects(current_user);\n      this.setState({\n        toggleLogin: false\n      });\n    };\n\n    this.handleLogoutCallback = async () => {\n      await axios({\n        method: 'post',\n        url: 'http://localhost:3001/logout',\n        data: {}\n      }).then(() => {\n        sessionStorage.clear();\n        this.state.toggleShoppingCart = false;\n        const cart_objects = [];\n        this.updateCartCounterAndPrice(cart_objects);\n        this.setState({\n          cart_objects,\n          current_user: {},\n          isAuthenticated: false\n        });\n      });\n    };\n\n    this.Authenticated = async () => {\n      await axios.get('http://localhost:3001/api/users/isAuthenticated').then(response => {\n        if (response.status === 200) {\n          // Session is auth\n          const current_user = response.data;\n          this.getCartObjects(current_user);\n          this.setState({\n            current_user,\n            isAuthenticated: true\n          });\n        } else {\n          // Session is not auth\n          this.setState({\n            current_user: {},\n            isAuthenticated: false\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.getCartObjects = user => {\n      if (user.cart.length === 0) {\n        this.state.empty_cart = true;\n        this.state.empty_cart_message = 'There is nothing to see here!';\n        return true;\n      } else {\n        this.state.empty_cart = false;\n        const cart_objects = [...user.cart];\n        this.updateCartCounterAndPrice(cart_objects);\n        this.setState({\n          cart_objects\n        });\n        return false;\n      }\n    };\n\n    this.updateCartCounterAndPrice = cartArray => {\n      let cart_counter = 0;\n      let cart_total_price = 0;\n      cartArray.forEach(product => {\n        cart_counter += parseInt(product.quantity);\n        cart_total_price += parseInt(product.price) * parseInt(product.quantity);\n      });\n      this.setState({\n        cart_counter,\n        cart_total_price\n      });\n    };\n\n    this.placeNewOrder = async () => {\n      await axios({\n        method: 'post',\n        url: 'http://localhost:3001/api/orders/newOrder',\n        data: {} //TODO add correct data\n\n      }).then(r => {\n        this.setState({\n          cart_error_feedback: false,\n          cart_success_feedback: true,\n          cart_feedback_text: r.data.Message\n        }).catch(err => {\n          this.setState({\n            cart_error_feedback: true,\n            cart_success_feedback: false,\n            cart_feedback_text: String\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          toggleLoginCallback: this.handleToggleLoginCallback,\n          toggleRegisterCallback: this.handleToggleRegisterCallback,\n          toggleShoppingCartCallback: this.handleToggleShoppingCartCallback,\n          handleLogoutCallback: this.handleLogoutCallback,\n          isAuthenticated: this.state.isAuthenticated,\n          current_user: this.state.current_user,\n          cart_counter: this.state.cart_counter,\n          cart_total_price: this.state.cart_total_price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Mainpage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Productpage, {\n            children: [\"addToCartCallback=\", this.handleAddToCartCallback, /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/products/:itemId\",\n              component: Productpage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/addReview/:itemId\",\n            component: addReview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/chart\",\n            component: ShoppingCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Orders, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), \"component=\", Orders, \"current_user=\", this.state.current_user, \"isAuthenticated=\", this.state.isAuthenticated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), this.state.toggleLogin && /*#__PURE__*/_jsxDEV(Login, {\n          loginCallback: this.handleLoginCallback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 48\n        }, this), this.state.toggleRegister && /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 51\n        }, this), this.state.toggleShoppingCart && /*#__PURE__*/_jsxDEV(ShoppingCart, {\n          addToCartCallback: this.handleAddToCartCallback,\n          quantity_increase: this.handleQuantityIncreaseCallback,\n          quantity_decrease: this.handleQuantityDecreaseCallback,\n          onCheckOut: this.handleCheckOutCallback,\n          empty_cart: this.state.empty_cart,\n          empty_cart_message: this.state.empty_cart_message,\n          cart_objects: this.state.cart_objects,\n          cart_total_price: this.state.cart_total_price,\n          toggle_error_feedback: this.state.cart_error_feedback,\n          toggle_success_feedback: this.state.cart_success_feedback,\n          feedback_text: this.state.cart_feedback_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          toggle_admin: this.props.toggle_admin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Tanja/IdeaProjects/portfolio2/client/src/Components/home.jsx"],"names":["React","Component","useEffect","axios","BrowserRouter","Router","Route","Switch","Navbar","Login","Register","About","Mainpage","Footer","Productpage","addReview","ShoppingCart","Orders","Home","constructor","props","state","toggleLogin","toggleRegister","toggleShoppingCart","isAuthenticated","current_user","empty_cart","empty_cart_message","cart_objects","cart_counter","cart_total_price","cart_error_feedback","cart_success_feedback","cart_feedback_text","String","componentDidMount","Authenticated","handleToggleLoginCallback","setState","handleToggleRegisterCallback","handleToggleShoppingCartCallback","handleQuantityIncreaseCallback","item_id","index","findIndex","i","itemId","quantity","method","url","data","product_id","then","r","updateCartCounterAndPrice","handleQuantityDecreaseCallback","handleAddToCartCallback","product","console","log","Product","handleCheckOutCallback","placeNewOrder","handleLoginCallback","user","getCartObjects","handleLogoutCallback","sessionStorage","clear","get","response","status","catch","error","cart","length","cartArray","forEach","parseInt","price","Message","err","render","toggle_admin"],"mappings":"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","sourcesContent":["import React, {Component, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Navbar from \"./navbar\";\r\nimport Login from \"./login\";\r\nimport Register from \"./register\";\r\nimport About from \"./about\";\r\nimport Mainpage from \"./Products/mainpage\";\r\nimport Footer from \"./footer\";\r\nimport Productpage from \"./Products/productpage\";\r\nimport addReview from \"./Products/addReview\";\r\nimport ShoppingCart from \"./shoppingCart\";\r\nimport Orders from \"./orders\";\r\n\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        toggleLogin: false,\r\n        toggleRegister: false,\r\n        toggleShoppingCart: false,\r\n        isAuthenticated: false,\r\n        current_user: {},\r\n        empty_cart: false,\r\n        empty_cart_message: 'Nothing to show here.',\r\n        cart_objects: [],\r\n        cart_counter: 0,\r\n        cart_total_price: 0,\r\n        cart_error_feedback: false,\r\n        cart_success_feedback: false,\r\n        cart_feedback_text: String,\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        this.Authenticated()\r\n    };\r\n\r\n    // Handlers\r\n    // Toggle windows.\r\n    handleToggleLoginCallback = () => {\r\n        this.setState({toggleLogin: !this.state.toggleLogin, toggleRegister: false});\r\n    }\r\n    handleToggleRegisterCallback = () => {\r\n        this.setState({toggleLogin: false, toggleRegister: !this.state.toggleRegister});\r\n    }\r\n    handleToggleShoppingCartCallback = () => {\r\n        this.setState({toggleShoppingCart: !this.state.toggleShoppingCart});\r\n    }\r\n\r\n    // Handle cart\r\n    handleQuantityIncreaseCallback = async item_id => {\r\n        const cart_objects = [...this.state.cart_objects];\r\n        const index = cart_objects.findIndex(i => i.itemId === item_id)\r\n        cart_objects[index].quantity++;\r\n        await axios({\r\n            method: 'post',\r\n            url: 'http://localhost:3001/api/cart/addToCart',\r\n            data: {\r\n                product_id: cart_objects[index].itemId,\r\n                quantity: 1\r\n            },\r\n        }).then(r => {\r\n            this.updateCartCounterAndPrice(cart_objects);\r\n            this.setState({cart_objects})\r\n        })\r\n    }\r\n    handleQuantityDecreaseCallback = async item_id => {\r\n        const cart_objects = [...this.state.cart_objects];\r\n        const index = cart_objects.findIndex(i => i.itemId === item_id)\r\n        if (cart_objects[index].quantity > 0){\r\n            cart_objects[index].quantity--;\r\n            await axios({\r\n                method: 'put',\r\n                url: 'http://localhost:3001/api/cart/deleteFromCart',\r\n                data: {\r\n                    product_id: cart_objects[index].itemId,\r\n                    quantity: 1\r\n                },\r\n            }).then(r => {\r\n                this.updateCartCounterAndPrice(cart_objects);\r\n                this.setState({cart_objects});\r\n            })\r\n        }\r\n    }\r\n    handleAddToCartCallback = (product, quantity) => {\r\n        console.log(\"add to cart\")\r\n        const Product = product;\r\n        Product.quantity = quantity;\r\n\r\n        const cart_objects = [...this.state.cart_objects, Product];\r\n        this.updateCartCounterAndPrice(cart_objects);\r\n        this.setState({cart_objects})\r\n    }\r\n\r\n    // Handle checkout\r\n    handleCheckOutCallback = async () => {\r\n        console.log(\"checkout\");\r\n        this.placeNewOrder()\r\n        //TODO Her mÃ¥ det lages et Checkout vindu som tar inn informasjon om levering.\r\n    }\r\n\r\n    // Handle authentication.\r\n    handleLoginCallback = user => {\r\n        const current_user = user;\r\n        this.setState({current_user, isAuthenticated: true});\r\n        this.getCartObjects(current_user);\r\n        this.setState({toggleLogin: false});\r\n    };\r\n    handleLogoutCallback = async () => {\r\n        await axios({\r\n            method: 'post',\r\n            url: 'http://localhost:3001/logout',\r\n            data: {}\r\n        }).then(() => {\r\n            sessionStorage.clear();\r\n            this.state.toggleShoppingCart = false;\r\n            const cart_objects = [];\r\n            this.updateCartCounterAndPrice(cart_objects);\r\n            this.setState({\r\n                cart_objects,\r\n                current_user: {},\r\n                isAuthenticated: false\r\n            });\r\n        })\r\n    };\r\n    Authenticated = async () => {\r\n        await axios.get('http://localhost:3001/api/users/isAuthenticated')\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    // Session is auth\r\n                    const current_user = response.data;\r\n                    this.getCartObjects(current_user);\r\n                    this.setState({ current_user, isAuthenticated: true});\r\n                } else {\r\n                    // Session is not auth\r\n                    this.setState({ current_user: {}, isAuthenticated: false });\r\n                }\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    // Cart\r\n    // Instantiate Cart\r\n    getCartObjects = user => {\r\n        if (user.cart.length === 0) {\r\n            this.state.empty_cart = true;\r\n            this.state.empty_cart_message = 'There is nothing to see here!';\r\n            return true;\r\n        } else {\r\n            this.state.empty_cart = false;\r\n            const cart_objects = [...user.cart];\r\n            this.updateCartCounterAndPrice(cart_objects);\r\n            this.setState({cart_objects});\r\n            return false;\r\n        }\r\n    };\r\n    // Updating cart values for the navbar.\r\n    updateCartCounterAndPrice = cartArray => {\r\n        let cart_counter = 0;\r\n        let cart_total_price = 0;\r\n        cartArray.forEach(product => {\r\n            cart_counter += parseInt(product.quantity);\r\n            cart_total_price += parseInt(product.price) * parseInt(product.quantity)\r\n        });\r\n        this.setState({cart_counter, cart_total_price})\r\n    }\r\n\r\n    placeNewOrder = async () => {\r\n        await axios({\r\n            method: 'post',\r\n            url: 'http://localhost:3001/api/orders/newOrder',\r\n            data: {}, //TODO add correct data\r\n        }).then(r => {\r\n            this.setState({\r\n                cart_error_feedback: false,\r\n                cart_success_feedback: true,\r\n                cart_feedback_text: r.data.Message\r\n            }).catch(err => {\r\n                this.setState({\r\n                    cart_error_feedback: true,\r\n                    cart_success_feedback: false,\r\n                    cart_feedback_text: String\r\n                })\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <React.Fragment>\r\n                    <Navbar\r\n                        toggleLoginCallback={this.handleToggleLoginCallback}\r\n                        toggleRegisterCallback={this.handleToggleRegisterCallback}\r\n                        toggleShoppingCartCallback={this.handleToggleShoppingCartCallback}\r\n                        handleLogoutCallback={this.handleLogoutCallback}\r\n                        isAuthenticated={this.state.isAuthenticated}\r\n                        current_user={this.state.current_user}\r\n                        cart_counter={this.state.cart_counter}\r\n                        cart_total_price={this.state.cart_total_price}\r\n                    />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Mainpage}/>\r\n                        <Productpage>\r\n                            addToCartCallback={this.handleAddToCartCallback}\r\n                            <Route path=\"/products/:itemId\" component={Productpage}/>\r\n                    </Productpage>\r\n                        <Route path=\"/addReview/:itemId\" component={addReview}/>\r\n                        <Route path=\"/chart\" component={ShoppingCart}/>\r\n                        <Orders>\r\n                            <Route path=\"/orders\" />\r\n                            component={Orders}\r\n                            current_user={this.state.current_user}\r\n                            isAuthenticated={this.state.isAuthenticated}\r\n                        </Orders>\r\n                    </Switch>\r\n                    {this.state.toggleLogin && <Login loginCallback={this.handleLoginCallback}/>}\r\n                    {this.state.toggleRegister && <Register />}\r\n                    {this.state.toggleShoppingCart &&\r\n                    <ShoppingCart\r\n                        addToCartCallback={this.handleAddToCartCallback}\r\n                        quantity_increase={this.handleQuantityIncreaseCallback}\r\n                        quantity_decrease={this.handleQuantityDecreaseCallback}\r\n                        onCheckOut={this.handleCheckOutCallback}\r\n                        empty_cart={this.state.empty_cart}\r\n                        empty_cart_message={this.state.empty_cart_message}\r\n                        cart_objects={this.state.cart_objects}\r\n                        cart_total_price={this.state.cart_total_price}\r\n                        toggle_error_feedback={this.state.cart_error_feedback}\r\n                        toggle_success_feedback={this.state.cart_success_feedback}\r\n                        feedback_text={this.state.cart_feedback_text}\r\n                    />}\r\n                    <About/>\r\n                    <Footer toggle_admin={this.props.toggle_admin}/>\r\n                </React.Fragment>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}
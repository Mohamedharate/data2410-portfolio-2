{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst CommandOperation = require('./command');\n\nconst defineAspects = require('./operation').defineAspects;\n/**\r\n * Get all the collection statistics.\r\n *\r\n * @class\r\n * @property {Collection} a Collection instance.\r\n * @property {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\r\n */\n\n\nclass StatsOperation extends CommandOperation {\n  /**\r\n   * Construct a Stats operation.\r\n   *\r\n   * @param {Collection} a Collection instance.\r\n   * @param {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\r\n   */\n  constructor(collection, options) {\n    super(collection.s.db, options, collection);\n  }\n\n  _buildCommand() {\n    const collection = this.collection;\n    const options = this.options; // Build command object\n\n    const command = {\n      collStats: collection.collectionName\n    }; // Check if we have the scale value\n\n    if (options['scale'] != null) {\n      command['scale'] = options['scale'];\n    }\n\n    return command;\n  }\n\n}\n\ndefineAspects(StatsOperation, Aspect.READ_OPERATION);\nmodule.exports = StatsOperation;","map":{"version":3,"sources":["C:/Users/Tanja Aakerholt/Documents/GitHub/portfolio2/client/node_modules/mongodb/lib/operations/stats.js"],"names":["Aspect","require","CommandOperation","defineAspects","StatsOperation","constructor","collection","options","s","db","_buildCommand","command","collStats","collectionName","READ_OPERATION","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,MAAME,gBAAgB,GAAGD,OAAO,CAAC,WAAD,CAAhC;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,aAAD,CAAP,CAAuBE,aAA7C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,cAAN,SAA6BF,gBAA7B,CAA8C;AAC5C;AACF;AACA;AACA;AACA;AACA;AACEG,EAAAA,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC/B,UAAMD,UAAU,CAACE,CAAX,CAAaC,EAAnB,EAAuBF,OAAvB,EAAgCD,UAAhC;AACD;;AAEDI,EAAAA,aAAa,GAAG;AACd,UAAMJ,UAAU,GAAG,KAAKA,UAAxB;AACA,UAAMC,OAAO,GAAG,KAAKA,OAArB,CAFc,CAId;;AACA,UAAMI,OAAO,GAAG;AACdC,MAAAA,SAAS,EAAEN,UAAU,CAACO;AADR,KAAhB,CALc,CASd;;AACA,QAAIN,OAAO,CAAC,OAAD,CAAP,IAAoB,IAAxB,EAA8B;AAC5BI,MAAAA,OAAO,CAAC,OAAD,CAAP,GAAmBJ,OAAO,CAAC,OAAD,CAA1B;AACD;;AAED,WAAOI,OAAP;AACD;;AA1B2C;;AA6B9CR,aAAa,CAACC,cAAD,EAAiBJ,MAAM,CAACc,cAAxB,CAAb;AAEAC,MAAM,CAACC,OAAP,GAAiBZ,cAAjB","sourcesContent":["'use strict';\r\n\r\nconst Aspect = require('./operation').Aspect;\r\nconst CommandOperation = require('./command');\r\nconst defineAspects = require('./operation').defineAspects;\r\n\r\n/**\r\n * Get all the collection statistics.\r\n *\r\n * @class\r\n * @property {Collection} a Collection instance.\r\n * @property {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\r\n */\r\nclass StatsOperation extends CommandOperation {\r\n  /**\r\n   * Construct a Stats operation.\r\n   *\r\n   * @param {Collection} a Collection instance.\r\n   * @param {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\r\n   */\r\n  constructor(collection, options) {\r\n    super(collection.s.db, options, collection);\r\n  }\r\n\r\n  _buildCommand() {\r\n    const collection = this.collection;\r\n    const options = this.options;\r\n\r\n    // Build command object\r\n    const command = {\r\n      collStats: collection.collectionName\r\n    };\r\n\r\n    // Check if we have the scale value\r\n    if (options['scale'] != null) {\r\n      command['scale'] = options['scale'];\r\n    }\r\n\r\n    return command;\r\n  }\r\n}\r\n\r\ndefineAspects(StatsOperation, Aspect.READ_OPERATION);\r\n\r\nmodule.exports = StatsOperation;\r\n"]},"metadata":{},"sourceType":"script"}
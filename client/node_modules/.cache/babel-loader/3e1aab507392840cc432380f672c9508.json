{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanja\\\\IdeaProjects\\\\portfolio2\\\\client\\\\src\\\\Components\\\\Admin\\\\AdminRegister.jsx\";\nimport React, { Component } from \"react\";\nimport DangerFeedback from \"../dangerFeedback\";\nimport axios from \"axios\";\nimport SuccessFeedback from \"../successFeedback\";\nimport LoadingSpinnerBtn from \"../LoadingSpinnerBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AdminRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: String,\n      lastName: String,\n      email: String,\n      password: String,\n      phoneNumber: String,\n      position: String,\n      toggle_loading: false,\n      feedback_text: String,\n      toggle_error_feedback: false,\n      toggle_success_feedback: false\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        toggle_loading: true\n      });\n      await axios({\n        method: 'post',\n        url: 'http://localhost:3001/api/admin/register',\n        data: {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password,\n          phoneNumber: this.state.phoneNumber,\n          position: this.state.position\n        }\n      }).then(res => {\n        console.log(res);\n        this.setState({\n          toggle_success_feedback: true,\n          toggle_error_feedback: false,\n          feedback_text: res.status\n        });\n      }).catch(err => {\n        this.setState({\n          toggle_success_feedback: false,\n          toggle_error_feedback: true,\n          feedback_text: err.response.data.Error\n        });\n      });\n      this.setState({\n        toggle_loading: false\n      });\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"form-signin\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row text-center m-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Register New Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row form-label-group justify-content-center m-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \" mt-2\",\n              htmlFor: \"firstName\",\n              children: \"First name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: this.handleInputChange,\n              className: \"form-control\",\n              placeholder: \"Firstname\",\n              pattern: \"^[A-Z\\xC6\\xD8\\xC5]+[a-z\\xE6\\xF8\\xE5 ,.'-]{1,20}(\\\\s[A-Z\\xC6\\xD8\\xC5]+[a-z\\xE6\\xF8\\xE5 ,.'-]{1,20})?$\",\n              title: \"First name has to start with an upper case letter and have at least 2 characters.\",\n              name: \"firstName\",\n              required: true,\n              autoFocus: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \" mt-2\",\n              htmlFor: \"lastName\",\n              children: \"Last name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: this.handleInputChange,\n              className: \"form-control\",\n              placeholder: \"Lastname\",\n              pattern: \"^[A-Z\\xC6\\xD8\\xC5]+[a-z\\xE6\\xF8\\xE5 ,.'-]{1,20}$\",\n              title: \"Last name has to start with an upper case letter and have at least 2 characters.\",\n              name: \"lastName\",\n              required: true,\n              autoFocus: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \" mt-2\",\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              onChange: this.handleInputChange,\n              className: \"form-control\",\n              placeholder: \"Email\",\n              name: \"email\",\n              required: true,\n              autoFocus: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \" mt-2\",\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"Password\",\n              onChange: this.handleInputChange,\n              className: \"form-control\",\n              placeholder: \"Password\",\n              pattern: \"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}\",\n              title: \"Password must contain at least 1 upper and lower case letter, 1 number and be at least 8 characters long.\",\n              name: \"password\",\n              required: true,\n              autoFocus: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \" mt-2\",\n              htmlFor: \"phoneNumber\",\n              children: \"Phone number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: this.handleInputChange,\n              className: \"form-control\",\n              placeholder: \"Phone\",\n              pattern: \"^(\\\\+|00)?[1-9][0-9 \\\\-\\\\(\\\\)\\\\.]{7,}$\",\n              title: \"The address should follow this format:\\r <Country code(optional)> <Number(At least 7 digits>.\",\n              name: \"phoneNumber\",\n              required: true,\n              autoFocus: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \" mt-2\",\n              htmlFor: \"position\",\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"position\",\n              onChange: this.handleInputChange,\n              className: \"custom-select my-1 mr-sm-2\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                defaultValue: \"\",\n                children: \"Choose...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CO-worker\",\n                children: \"CO-worker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Marketing Coordinator\",\n                children: \"Marketing Coordinator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Web Designer\",\n                children: \"Web Designer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Project Manager\",\n                children: \"Project Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Executive Sales Manager\",\n                children: \"Executive Sales Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"President\",\n                children: \"President\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center m-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            children: this.state.toggle_loading ? /*#__PURE__*/_jsxDEV(LoadingSpinnerBtn, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 58\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary btn-block mt-2\",\n              children: \"Register Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), this.state.toggle_error_feedback && /*#__PURE__*/_jsxDEV(DangerFeedback, {\n          feedback_error_text: this.state.feedback_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), this.state.toggle_success_feedback && /*#__PURE__*/_jsxDEV(SuccessFeedback, {\n          feedback_success_text: this.state.feedback_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AdminRegister;","map":{"version":3,"sources":["C:/Users/Tanja/IdeaProjects/portfolio2/client/src/Components/Admin/AdminRegister.jsx"],"names":["React","Component","DangerFeedback","axios","SuccessFeedback","LoadingSpinnerBtn","AdminRegister","constructor","props","state","firstName","String","lastName","email","password","phoneNumber","position","toggle_loading","feedback_text","toggle_error_feedback","toggle_success_feedback","handleSubmit","event","preventDefault","setState","method","url","data","then","res","console","log","status","catch","err","response","Error","handleInputChange","bind","target","value","name","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport DangerFeedback from \"../dangerFeedback\";\r\nimport axios from \"axios\";\r\nimport SuccessFeedback from \"../successFeedback\";\r\nimport LoadingSpinnerBtn from \"../LoadingSpinnerBtn\";\r\n\r\n\r\nclass AdminRegister extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n    state = {\r\n        firstName: String,\r\n        lastName: String,\r\n        email: String,\r\n        password: String,\r\n        phoneNumber: String,\r\n        position: String,\r\n\r\n        toggle_loading: false,\r\n        feedback_text: String,\r\n        toggle_error_feedback: false,\r\n        toggle_success_feedback: false,\r\n    };\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    };\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        this.setState({toggle_loading: true});\r\n\r\n        await axios({\r\n            method: 'post',\r\n            url: 'http://localhost:3001/api/admin/register',\r\n            data: {\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                phoneNumber: this.state.phoneNumber,\r\n                position: this.state.position,\r\n            }\r\n        }).then(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                toggle_success_feedback: true,\r\n                toggle_error_feedback: false,\r\n                feedback_text: res.status,\r\n            })\r\n        }).catch(err => {\r\n            this.setState({\r\n                toggle_success_feedback: false,\r\n                toggle_error_feedback: true,\r\n                feedback_text: err.response.data.Error,\r\n            })\r\n        })\r\n        this.setState({toggle_loading: false});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form onSubmit={this.handleSubmit} className=\"form-signin\">\r\n                    <div className=\"row text-center m-5\">\r\n                        <div className=\"col-12\">\r\n                            <h3>Register New Employee</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row form-label-group justify-content-center m-2\">\r\n                        <div className=\"col-sm-6\">\r\n                            <label className=\" mt-2\" htmlFor=\"firstName\">First name:</label>\r\n                            <input type=\"text\" onChange={this.handleInputChange}\r\n                                   className=\"form-control\" placeholder=\"Firstname\"\r\n                                   pattern=\"^[A-ZÆØÅ]+[a-zæøå ,.'-]{1,20}(\\s[A-ZÆØÅ]+[a-zæøå ,.'-]{1,20})?$\"\r\n                                   title=\"First name has to start with an upper case letter and have at least 2 characters.\"\r\n                                   name=\"firstName\" required autoFocus=\"\"/>\r\n                            <label className=\" mt-2\" htmlFor=\"lastName\">Last name:</label>\r\n                            <input type=\"text\" onChange={this.handleInputChange}\r\n                                   className=\"form-control\" placeholder=\"Lastname\"\r\n                                   pattern=\"^[A-ZÆØÅ]+[a-zæøå ,.'-]{1,20}$\"\r\n                                   title=\"Last name has to start with an upper case letter and have at least 2 characters.\"\r\n                                   name=\"lastName\" required autoFocus=\"\"/>\r\n                            <label className=\" mt-2\" htmlFor=\"email\">Email:</label>\r\n                            <input type=\"email\" onChange={this.handleInputChange}\r\n                                   className=\"form-control\" placeholder=\"Email\"\r\n                                   name=\"email\" required autoFocus=\"\"/>\r\n                            <label className=\" mt-2\" htmlFor=\"password\">Password</label>\r\n                            <input type=\"Password\" onChange={this.handleInputChange}\r\n                                   className=\"form-control\" placeholder=\"Password\"\r\n                                   pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}\"\r\n                                   title=\"Password must contain at least 1 upper and lower case letter, 1 number and be at least 8 characters long.\"\r\n                                   name=\"password\" required autoFocus=\"\"/>\r\n                            <label className=\" mt-2\" htmlFor=\"phoneNumber\">Phone number:</label>\r\n                            <input type=\"text\" onChange={this.handleInputChange}\r\n                                   className=\"form-control\" placeholder=\"Phone\"\r\n                                   pattern=\"^(\\+|00)?[1-9][0-9 \\-\\(\\)\\.]{7,}$\"\r\n                                   title=\"The address should follow this format:\r\n                                       <Country code(optional)> <Number(At least 7 digits>.\"\r\n                                   name=\"phoneNumber\" required autoFocus=\"\"/>\r\n                            <label className=\" mt-2\" htmlFor=\"position\">Title:</label>\r\n                            <select name=\"position\" onChange={this.handleInputChange} className=\"custom-select my-1 mr-sm-2\" required>\r\n                                <option value=\"\" defaultValue=\"\">Choose...</option>\r\n                                <option value=\"CO-worker\">CO-worker</option>\r\n                                <option value=\"Marketing Coordinator\">Marketing Coordinator</option>\r\n                                <option value=\"Web Designer\">Web Designer</option>\r\n                                <option value=\"Project Manager\">Project Manager</option>\r\n                                <option value=\"Executive Sales Manager\">Executive Sales Manager</option>\r\n                                <option value=\"President\">President</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center m-2\">\r\n                        <div className=\"col-md-3\">\r\n                            {this.state.toggle_loading ? <LoadingSpinnerBtn/> :\r\n                                <button type=\"submit\" className=\"btn btn-primary btn-block mt-2\">\r\n                                    Register Employee\r\n                                </button>}\r\n                        </div>\r\n                    </div>\r\n                    {this.state.toggle_error_feedback &&\r\n                    <DangerFeedback feedback_error_text={this.state.feedback_text}/>}\r\n                    {this.state.toggle_success_feedback &&\r\n                    <SuccessFeedback feedback_success_text={this.state.feedback_text}/>}\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminRegister;"]},"metadata":{},"sourceType":"module"}
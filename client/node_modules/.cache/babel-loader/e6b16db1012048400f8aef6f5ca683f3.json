{"ast":null,"code":"'use strict';\n\nconst require_optional = require('optional-require')(require);\n\nfunction debugOptions(debugFields, options) {\n  const finaloptions = {};\n  debugFields.forEach(function (n) {\n    finaloptions[n] = options[n];\n  });\n  return finaloptions;\n}\n\nfunction retrieveBSON() {\n  const BSON = require('bson');\n\n  BSON.native = false;\n  const optionalBSON = require_optional('bson-ext');\n\n  if (optionalBSON) {\n    optionalBSON.native = true;\n    return optionalBSON;\n  }\n\n  return BSON;\n} // Throw an error if an attempt to use Snappy is made when Snappy is not installed\n\n\nfunction noSnappyWarning() {\n  throw new Error('Attempted to use Snappy compression, but Snappy is not installed. Install or disable Snappy compression and try again.');\n} // Facilitate loading Snappy optionally\n\n\nfunction retrieveSnappy() {\n  let snappy = require_optional('snappy');\n\n  if (!snappy) {\n    snappy = {\n      compress: noSnappyWarning,\n      uncompress: noSnappyWarning,\n      compressSync: noSnappyWarning,\n      uncompressSync: noSnappyWarning\n    };\n  }\n\n  return snappy;\n}\n\nmodule.exports = {\n  debugOptions,\n  retrieveBSON,\n  retrieveSnappy\n};","map":{"version":3,"sources":["C:/Users/Tanja Aakerholt/Documents/GitHub/portfolio2/client/node_modules/mongodb/lib/core/connection/utils.js"],"names":["require_optional","require","debugOptions","debugFields","options","finaloptions","forEach","n","retrieveBSON","BSON","native","optionalBSON","noSnappyWarning","Error","retrieveSnappy","snappy","compress","uncompress","compressSync","uncompressSync","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BA,OAA5B,CAAzB;;AAEA,SAASC,YAAT,CAAsBC,WAAtB,EAAmCC,OAAnC,EAA4C;AAC1C,QAAMC,YAAY,GAAG,EAArB;AACAF,EAAAA,WAAW,CAACG,OAAZ,CAAoB,UAASC,CAAT,EAAY;AAC9BF,IAAAA,YAAY,CAACE,CAAD,CAAZ,GAAkBH,OAAO,CAACG,CAAD,CAAzB;AACD,GAFD;AAIA,SAAOF,YAAP;AACD;;AAED,SAASG,YAAT,GAAwB;AACtB,QAAMC,IAAI,GAAGR,OAAO,CAAC,MAAD,CAApB;;AACAQ,EAAAA,IAAI,CAACC,MAAL,GAAc,KAAd;AAEA,QAAMC,YAAY,GAAGX,gBAAgB,CAAC,UAAD,CAArC;;AACA,MAAIW,YAAJ,EAAkB;AAChBA,IAAAA,YAAY,CAACD,MAAb,GAAsB,IAAtB;AACA,WAAOC,YAAP;AACD;;AAED,SAAOF,IAAP;AACD,C,CAED;;;AACA,SAASG,eAAT,GAA2B;AACzB,QAAM,IAAIC,KAAJ,CACJ,wHADI,CAAN;AAGD,C,CAED;;;AACA,SAASC,cAAT,GAA0B;AACxB,MAAIC,MAAM,GAAGf,gBAAgB,CAAC,QAAD,CAA7B;;AACA,MAAI,CAACe,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG;AACPC,MAAAA,QAAQ,EAAEJ,eADH;AAEPK,MAAAA,UAAU,EAAEL,eAFL;AAGPM,MAAAA,YAAY,EAAEN,eAHP;AAIPO,MAAAA,cAAc,EAAEP;AAJT,KAAT;AAMD;;AACD,SAAOG,MAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,YADe;AAEfM,EAAAA,YAFe;AAGfM,EAAAA;AAHe,CAAjB","sourcesContent":["'use strict';\r\n\r\nconst require_optional = require('optional-require')(require);\r\n\r\nfunction debugOptions(debugFields, options) {\r\n  const finaloptions = {};\r\n  debugFields.forEach(function(n) {\r\n    finaloptions[n] = options[n];\r\n  });\r\n\r\n  return finaloptions;\r\n}\r\n\r\nfunction retrieveBSON() {\r\n  const BSON = require('bson');\r\n  BSON.native = false;\r\n\r\n  const optionalBSON = require_optional('bson-ext');\r\n  if (optionalBSON) {\r\n    optionalBSON.native = true;\r\n    return optionalBSON;\r\n  }\r\n\r\n  return BSON;\r\n}\r\n\r\n// Throw an error if an attempt to use Snappy is made when Snappy is not installed\r\nfunction noSnappyWarning() {\r\n  throw new Error(\r\n    'Attempted to use Snappy compression, but Snappy is not installed. Install or disable Snappy compression and try again.'\r\n  );\r\n}\r\n\r\n// Facilitate loading Snappy optionally\r\nfunction retrieveSnappy() {\r\n  let snappy = require_optional('snappy');\r\n  if (!snappy) {\r\n    snappy = {\r\n      compress: noSnappyWarning,\r\n      uncompress: noSnappyWarning,\r\n      compressSync: noSnappyWarning,\r\n      uncompressSync: noSnappyWarning\r\n    };\r\n  }\r\n  return snappy;\r\n}\r\n\r\nmodule.exports = {\r\n  debugOptions,\r\n  retrieveBSON,\r\n  retrieveSnappy\r\n};\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst ReadPreference = require('../core').ReadPreference;\n\nconst ReadConcern = require('../read_concern');\n\nconst WriteConcern = require('../write_concern');\n\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\nconst decorateWithExplain = require('../utils').decorateWithExplain;\n\nconst commandSupportsReadConcern = require('../core/sessions').commandSupportsReadConcern;\n\nconst MongoError = require('../core/error').MongoError;\n\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n\nclass CommandOperationV2 extends OperationBase {\n  constructor(parent, options, operationOptions) {\n    super(options);\n    this.ns = parent.s.namespace.withCollection('$cmd');\n    const propertyProvider = this.hasAspect(Aspect.NO_INHERIT_OPTIONS) ? undefined : parent;\n    this.readPreference = this.hasAspect(Aspect.WRITE_OPERATION) ? ReadPreference.primary : ReadPreference.resolve(propertyProvider, this.options);\n    this.readConcern = resolveReadConcern(propertyProvider, this.options);\n    this.writeConcern = resolveWriteConcern(propertyProvider, this.options);\n\n    if (operationOptions && typeof operationOptions.fullResponse === 'boolean') {\n      this.fullResponse = true;\n    } // TODO: A lot of our code depends on having the read preference in the options. This should\n    //       go away, but also requires massive test rewrites.\n\n\n    this.options.readPreference = this.readPreference; // TODO(NODE-2056): make logger another \"inheritable\" property\n\n    if (parent.s.logger) {\n      this.logger = parent.s.logger;\n    } else if (parent.s.db && parent.s.db.logger) {\n      this.logger = parent.s.db.logger;\n    }\n  }\n\n  executeCommand(server, cmd, callback) {\n    // TODO: consider making this a non-enumerable property\n    this.server = server;\n    const options = this.options;\n    const serverWireVersion = maxWireVersion(server);\n    const inTransaction = this.session && this.session.inTransaction();\n\n    if (this.readConcern && commandSupportsReadConcern(cmd) && !inTransaction) {\n      Object.assign(cmd, {\n        readConcern: this.readConcern\n      });\n    }\n\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      callback(new MongoError(`Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`));\n      return;\n    }\n\n    if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      if (this.writeConcern && this.hasAspect(Aspect.WRITE_OPERATION)) {\n        Object.assign(cmd, {\n          writeConcern: this.writeConcern\n        });\n      }\n\n      if (options.collation && typeof options.collation === 'object') {\n        Object.assign(cmd, {\n          collation: options.collation\n        });\n      }\n    }\n\n    if (typeof options.maxTimeMS === 'number') {\n      cmd.maxTimeMS = options.maxTimeMS;\n    }\n\n    if (typeof options.comment === 'string') {\n      cmd.comment = options.comment;\n    }\n\n    if (this.hasAspect(Aspect.EXPLAINABLE) && this.explain) {\n      if (serverWireVersion < 6 && cmd.aggregate) {\n        // Prior to 3.6, with aggregate, verbosity is ignored, and we must pass in \"explain: true\"\n        cmd.explain = true;\n      } else {\n        cmd = decorateWithExplain(cmd, this.explain);\n      }\n    }\n\n    if (this.logger && this.logger.isDebug()) {\n      this.logger.debug(`executing command ${JSON.stringify(cmd)} against ${this.ns}`);\n    }\n\n    server.command(this.ns.toString(), cmd, this.options, (err, result) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n\n      if (this.fullResponse) {\n        callback(null, result);\n        return;\n      }\n\n      callback(null, result.result);\n    });\n  }\n\n}\n\nfunction resolveWriteConcern(parent, options) {\n  return WriteConcern.fromOptions(options) || parent && parent.writeConcern;\n}\n\nfunction resolveReadConcern(parent, options) {\n  return ReadConcern.fromOptions(options) || parent && parent.readConcern;\n}\n\nmodule.exports = CommandOperationV2;","map":{"version":3,"sources":["C:/Users/Tanja Aakerholt/Documents/GitHub/portfolio2/client/node_modules/mongodb/lib/operations/command_v2.js"],"names":["Aspect","require","OperationBase","ReadPreference","ReadConcern","WriteConcern","maxWireVersion","decorateWithExplain","commandSupportsReadConcern","MongoError","SUPPORTS_WRITE_CONCERN_AND_COLLATION","CommandOperationV2","constructor","parent","options","operationOptions","ns","s","namespace","withCollection","propertyProvider","hasAspect","NO_INHERIT_OPTIONS","undefined","readPreference","WRITE_OPERATION","primary","resolve","readConcern","resolveReadConcern","writeConcern","resolveWriteConcern","fullResponse","logger","db","executeCommand","server","cmd","callback","serverWireVersion","inTransaction","session","Object","assign","collation","name","maxTimeMS","comment","EXPLAINABLE","explain","aggregate","isDebug","debug","JSON","stringify","command","toString","err","result","fromOptions","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nconst Aspect = require('./operation').Aspect;\r\nconst OperationBase = require('./operation').OperationBase;\r\nconst ReadPreference = require('../core').ReadPreference;\r\nconst ReadConcern = require('../read_concern');\r\nconst WriteConcern = require('../write_concern');\r\nconst maxWireVersion = require('../core/utils').maxWireVersion;\r\nconst decorateWithExplain = require('../utils').decorateWithExplain;\r\nconst commandSupportsReadConcern = require('../core/sessions').commandSupportsReadConcern;\r\nconst MongoError = require('../core/error').MongoError;\r\n\r\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\r\n\r\nclass CommandOperationV2 extends OperationBase {\r\n  constructor(parent, options, operationOptions) {\r\n    super(options);\r\n\r\n    this.ns = parent.s.namespace.withCollection('$cmd');\r\n    const propertyProvider = this.hasAspect(Aspect.NO_INHERIT_OPTIONS) ? undefined : parent;\r\n    this.readPreference = this.hasAspect(Aspect.WRITE_OPERATION)\r\n      ? ReadPreference.primary\r\n      : ReadPreference.resolve(propertyProvider, this.options);\r\n    this.readConcern = resolveReadConcern(propertyProvider, this.options);\r\n    this.writeConcern = resolveWriteConcern(propertyProvider, this.options);\r\n\r\n    if (operationOptions && typeof operationOptions.fullResponse === 'boolean') {\r\n      this.fullResponse = true;\r\n    }\r\n\r\n    // TODO: A lot of our code depends on having the read preference in the options. This should\r\n    //       go away, but also requires massive test rewrites.\r\n    this.options.readPreference = this.readPreference;\r\n\r\n    // TODO(NODE-2056): make logger another \"inheritable\" property\r\n    if (parent.s.logger) {\r\n      this.logger = parent.s.logger;\r\n    } else if (parent.s.db && parent.s.db.logger) {\r\n      this.logger = parent.s.db.logger;\r\n    }\r\n  }\r\n\r\n  executeCommand(server, cmd, callback) {\r\n    // TODO: consider making this a non-enumerable property\r\n    this.server = server;\r\n\r\n    const options = this.options;\r\n    const serverWireVersion = maxWireVersion(server);\r\n    const inTransaction = this.session && this.session.inTransaction();\r\n\r\n    if (this.readConcern && commandSupportsReadConcern(cmd) && !inTransaction) {\r\n      Object.assign(cmd, { readConcern: this.readConcern });\r\n    }\r\n\r\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\r\n      callback(\r\n        new MongoError(\r\n          `Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`\r\n        )\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (serverWireVersion >= SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\r\n      if (this.writeConcern && this.hasAspect(Aspect.WRITE_OPERATION)) {\r\n        Object.assign(cmd, { writeConcern: this.writeConcern });\r\n      }\r\n\r\n      if (options.collation && typeof options.collation === 'object') {\r\n        Object.assign(cmd, { collation: options.collation });\r\n      }\r\n    }\r\n\r\n    if (typeof options.maxTimeMS === 'number') {\r\n      cmd.maxTimeMS = options.maxTimeMS;\r\n    }\r\n\r\n    if (typeof options.comment === 'string') {\r\n      cmd.comment = options.comment;\r\n    }\r\n\r\n    if (this.hasAspect(Aspect.EXPLAINABLE) && this.explain) {\r\n      if (serverWireVersion < 6 && cmd.aggregate) {\r\n        // Prior to 3.6, with aggregate, verbosity is ignored, and we must pass in \"explain: true\"\r\n        cmd.explain = true;\r\n      } else {\r\n        cmd = decorateWithExplain(cmd, this.explain);\r\n      }\r\n    }\r\n\r\n    if (this.logger && this.logger.isDebug()) {\r\n      this.logger.debug(`executing command ${JSON.stringify(cmd)} against ${this.ns}`);\r\n    }\r\n\r\n    server.command(this.ns.toString(), cmd, this.options, (err, result) => {\r\n      if (err) {\r\n        callback(err, null);\r\n        return;\r\n      }\r\n\r\n      if (this.fullResponse) {\r\n        callback(null, result);\r\n        return;\r\n      }\r\n\r\n      callback(null, result.result);\r\n    });\r\n  }\r\n}\r\n\r\nfunction resolveWriteConcern(parent, options) {\r\n  return WriteConcern.fromOptions(options) || (parent && parent.writeConcern);\r\n}\r\n\r\nfunction resolveReadConcern(parent, options) {\r\n  return ReadConcern.fromOptions(options) || (parent && parent.readConcern);\r\n}\r\n\r\nmodule.exports = CommandOperationV2;\r\n"]},"metadata":{},"sourceType":"script"}
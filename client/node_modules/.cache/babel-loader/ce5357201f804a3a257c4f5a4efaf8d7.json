{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst CommandOperationV2 = require('./command_v2');\n\nclass EstimatedDocumentCountOperation extends CommandOperationV2 {\n  constructor(collection, query, options) {\n    if (typeof options === 'undefined') {\n      options = query;\n      query = undefined;\n    }\n\n    super(collection, options);\n    this.collectionName = collection.s.namespace.collection;\n\n    if (query) {\n      this.query = query;\n    }\n  }\n\n  execute(server, callback) {\n    const options = this.options;\n    const cmd = {\n      count: this.collectionName\n    };\n\n    if (this.query) {\n      cmd.query = this.query;\n    }\n\n    if (typeof options.skip === 'number') {\n      cmd.skip = options.skip;\n    }\n\n    if (typeof options.limit === 'number') {\n      cmd.limit = options.limit;\n    }\n\n    if (options.hint) {\n      cmd.hint = options.hint;\n    }\n\n    super.executeCommand(server, cmd, (err, response) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      callback(null, response.n);\n    });\n  }\n\n}\n\ndefineAspects(EstimatedDocumentCountOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = EstimatedDocumentCountOperation;","map":{"version":3,"sources":["C:/Users/Tanja Aakerholt/Documents/GitHub/portfolio2/client/node_modules/mongodb/lib/operations/estimated_document_count.js"],"names":["Aspect","require","defineAspects","CommandOperationV2","EstimatedDocumentCountOperation","constructor","collection","query","options","undefined","collectionName","s","namespace","execute","server","callback","cmd","count","skip","limit","hint","executeCommand","err","response","n","READ_OPERATION","RETRYABLE","EXECUTE_WITH_SELECTION","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAtC;;AACA,MAAME,aAAa,GAAGD,OAAO,CAAC,aAAD,CAAP,CAAuBC,aAA7C;;AACA,MAAMC,kBAAkB,GAAGF,OAAO,CAAC,cAAD,CAAlC;;AAEA,MAAMG,+BAAN,SAA8CD,kBAA9C,CAAiE;AAC/DE,EAAAA,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoBC,OAApB,EAA6B;AACtC,QAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AAClCA,MAAAA,OAAO,GAAGD,KAAV;AACAA,MAAAA,KAAK,GAAGE,SAAR;AACD;;AAED,UAAMH,UAAN,EAAkBE,OAAlB;AACA,SAAKE,cAAL,GAAsBJ,UAAU,CAACK,CAAX,CAAaC,SAAb,CAAuBN,UAA7C;;AACA,QAAIC,KAAJ,EAAW;AACT,WAAKA,KAAL,GAAaA,KAAb;AACD;AACF;;AAEDM,EAAAA,OAAO,CAACC,MAAD,EAASC,QAAT,EAAmB;AACxB,UAAMP,OAAO,GAAG,KAAKA,OAArB;AACA,UAAMQ,GAAG,GAAG;AAAEC,MAAAA,KAAK,EAAE,KAAKP;AAAd,KAAZ;;AAEA,QAAI,KAAKH,KAAT,EAAgB;AACdS,MAAAA,GAAG,CAACT,KAAJ,GAAY,KAAKA,KAAjB;AACD;;AAED,QAAI,OAAOC,OAAO,CAACU,IAAf,KAAwB,QAA5B,EAAsC;AACpCF,MAAAA,GAAG,CAACE,IAAJ,GAAWV,OAAO,CAACU,IAAnB;AACD;;AAED,QAAI,OAAOV,OAAO,CAACW,KAAf,KAAyB,QAA7B,EAAuC;AACrCH,MAAAA,GAAG,CAACG,KAAJ,GAAYX,OAAO,CAACW,KAApB;AACD;;AAED,QAAIX,OAAO,CAACY,IAAZ,EAAkB;AAChBJ,MAAAA,GAAG,CAACI,IAAJ,GAAWZ,OAAO,CAACY,IAAnB;AACD;;AAED,UAAMC,cAAN,CAAqBP,MAArB,EAA6BE,GAA7B,EAAkC,CAACM,GAAD,EAAMC,QAAN,KAAmB;AACnD,UAAID,GAAJ,EAAS;AACPP,QAAAA,QAAQ,CAACO,GAAD,CAAR;AACA;AACD;;AAEDP,MAAAA,QAAQ,CAAC,IAAD,EAAOQ,QAAQ,CAACC,CAAhB,CAAR;AACD,KAPD;AAQD;;AA1C8D;;AA6CjEtB,aAAa,CAACE,+BAAD,EAAkC,CAC7CJ,MAAM,CAACyB,cADsC,EAE7CzB,MAAM,CAAC0B,SAFsC,EAG7C1B,MAAM,CAAC2B,sBAHsC,CAAlC,CAAb;AAMAC,MAAM,CAACC,OAAP,GAAiBzB,+BAAjB","sourcesContent":["'use strict';\r\n\r\nconst Aspect = require('./operation').Aspect;\r\nconst defineAspects = require('./operation').defineAspects;\r\nconst CommandOperationV2 = require('./command_v2');\r\n\r\nclass EstimatedDocumentCountOperation extends CommandOperationV2 {\r\n  constructor(collection, query, options) {\r\n    if (typeof options === 'undefined') {\r\n      options = query;\r\n      query = undefined;\r\n    }\r\n\r\n    super(collection, options);\r\n    this.collectionName = collection.s.namespace.collection;\r\n    if (query) {\r\n      this.query = query;\r\n    }\r\n  }\r\n\r\n  execute(server, callback) {\r\n    const options = this.options;\r\n    const cmd = { count: this.collectionName };\r\n\r\n    if (this.query) {\r\n      cmd.query = this.query;\r\n    }\r\n\r\n    if (typeof options.skip === 'number') {\r\n      cmd.skip = options.skip;\r\n    }\r\n\r\n    if (typeof options.limit === 'number') {\r\n      cmd.limit = options.limit;\r\n    }\r\n\r\n    if (options.hint) {\r\n      cmd.hint = options.hint;\r\n    }\r\n\r\n    super.executeCommand(server, cmd, (err, response) => {\r\n      if (err) {\r\n        callback(err);\r\n        return;\r\n      }\r\n\r\n      callback(null, response.n);\r\n    });\r\n  }\r\n}\r\n\r\ndefineAspects(EstimatedDocumentCountOperation, [\r\n  Aspect.READ_OPERATION,\r\n  Aspect.RETRYABLE,\r\n  Aspect.EXECUTE_WITH_SELECTION\r\n]);\r\n\r\nmodule.exports = EstimatedDocumentCountOperation;\r\n"]},"metadata":{},"sourceType":"script"}
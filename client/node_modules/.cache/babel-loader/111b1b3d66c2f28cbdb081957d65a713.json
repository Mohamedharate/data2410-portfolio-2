{"ast":null,"code":"'use strict';\n/**\n * The **ReadConcern** class is a class that represents a MongoDB ReadConcern.\n * @class\n * @property {string} level The read concern level\n * @see https://docs.mongodb.com/manual/reference/read-concern/index.html\n */\n\nclass ReadConcern {\n  /**\n   * Constructs a ReadConcern from the read concern properties.\n   * @param {string} [level] The read concern level ({'local'|'available'|'majority'|'linearizable'|'snapshot'})\n   */\n  constructor(level) {\n    if (level != null) {\n      this.level = level;\n    }\n  }\n  /**\n   * Construct a ReadConcern given an options object.\n   *\n   * @param {object} options The options object from which to extract the write concern.\n   * @return {ReadConcern}\n   */\n\n\n  static fromOptions(options) {\n    if (options == null) {\n      return;\n    }\n\n    if (options.readConcern) {\n      if (options.readConcern instanceof ReadConcern) {\n        return options.readConcern;\n      }\n\n      return new ReadConcern(options.readConcern.level);\n    }\n\n    if (options.level) {\n      return new ReadConcern(options.level);\n    }\n  }\n\n  static get MAJORITY() {\n    return 'majority';\n  }\n\n  static get AVAILABLE() {\n    return 'available';\n  }\n\n  static get LINEARIZABLE() {\n    return 'linearizable';\n  }\n\n  static get SNAPSHOT() {\n    return 'snapshot';\n  }\n\n}\n\nmodule.exports = ReadConcern;","map":{"version":3,"sources":["C:/Users/Tanja Aakerholt/Documents/GitHub/portfolio2/node_modules/mongodb/lib/read_concern.js"],"names":["ReadConcern","constructor","level","fromOptions","options","readConcern","MAJORITY","AVAILABLE","LINEARIZABLE","SNAPSHOT","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,WAAN,CAAkB;AAChB;AACF;AACA;AACA;AACEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAKA,KAAL,GAAaA,KAAb;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;;;AACoB,SAAXC,WAAW,CAACC,OAAD,EAAU;AAC1B,QAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB;AACD;;AAED,QAAIA,OAAO,CAACC,WAAZ,EAAyB;AACvB,UAAID,OAAO,CAACC,WAAR,YAA+BL,WAAnC,EAAgD;AAC9C,eAAOI,OAAO,CAACC,WAAf;AACD;;AAED,aAAO,IAAIL,WAAJ,CAAgBI,OAAO,CAACC,WAAR,CAAoBH,KAApC,CAAP;AACD;;AAED,QAAIE,OAAO,CAACF,KAAZ,EAAmB;AACjB,aAAO,IAAIF,WAAJ,CAAgBI,OAAO,CAACF,KAAxB,CAAP;AACD;AACF;;AAEkB,aAARI,QAAQ,GAAG;AACpB,WAAO,UAAP;AACD;;AAEmB,aAATC,SAAS,GAAG;AACrB,WAAO,WAAP;AACD;;AAEsB,aAAZC,YAAY,GAAG;AACxB,WAAO,cAAP;AACD;;AAEkB,aAARC,QAAQ,GAAG;AACpB,WAAO,UAAP;AACD;;AAjDe;;AAoDlBC,MAAM,CAACC,OAAP,GAAiBX,WAAjB","sourcesContent":["'use strict';\n\n/**\n * The **ReadConcern** class is a class that represents a MongoDB ReadConcern.\n * @class\n * @property {string} level The read concern level\n * @see https://docs.mongodb.com/manual/reference/read-concern/index.html\n */\nclass ReadConcern {\n  /**\n   * Constructs a ReadConcern from the read concern properties.\n   * @param {string} [level] The read concern level ({'local'|'available'|'majority'|'linearizable'|'snapshot'})\n   */\n  constructor(level) {\n    if (level != null) {\n      this.level = level;\n    }\n  }\n\n  /**\n   * Construct a ReadConcern given an options object.\n   *\n   * @param {object} options The options object from which to extract the write concern.\n   * @return {ReadConcern}\n   */\n  static fromOptions(options) {\n    if (options == null) {\n      return;\n    }\n\n    if (options.readConcern) {\n      if (options.readConcern instanceof ReadConcern) {\n        return options.readConcern;\n      }\n\n      return new ReadConcern(options.readConcern.level);\n    }\n\n    if (options.level) {\n      return new ReadConcern(options.level);\n    }\n  }\n\n  static get MAJORITY() {\n    return 'majority';\n  }\n\n  static get AVAILABLE() {\n    return 'available';\n  }\n\n  static get LINEARIZABLE() {\n    return 'linearizable';\n  }\n\n  static get SNAPSHOT() {\n    return 'snapshot';\n  }\n}\n\nmodule.exports = ReadConcern;\n"]},"metadata":{},"sourceType":"script"}
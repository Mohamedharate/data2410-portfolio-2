{"ast":null,"code":"'use strict';\n\nlet defaultModule;\n\nfunction loadDefaultModule() {\n  if (!defaultModule) {\n    defaultModule = extension(require('mongodb'));\n  }\n\n  return defaultModule;\n}\n\nconst MongoCryptError = require('./lib/common').MongoCryptError;\n\nfunction extension(mongodb) {\n  const modules = {\n    mongodb\n  };\n  modules.stateMachine = require('./lib/stateMachine')(modules);\n  modules.autoEncrypter = require('./lib/autoEncrypter')(modules);\n  modules.clientEncryption = require('./lib/clientEncryption')(modules);\n  return {\n    AutoEncrypter: modules.autoEncrypter.AutoEncrypter,\n    ClientEncryption: modules.clientEncryption.ClientEncryption,\n    MongoCryptError\n  };\n}\n\nmodule.exports = {\n  extension,\n  MongoCryptError,\n\n  get AutoEncrypter() {\n    const m = loadDefaultModule();\n    delete module.exports.AutoEncrypter;\n    module.exports.AutoEncrypter = m.AutoEncrypter;\n    return m.AutoEncrypter;\n  },\n\n  get ClientEncryption() {\n    const m = loadDefaultModule();\n    delete module.exports.ClientEncryption;\n    module.exports.ClientEncryption = m.ClientEncryption;\n    return m.ClientEncryption;\n  }\n\n};","map":{"version":3,"sources":["C:/Users/Tanja Aakerholt/Documents/GitHub/portfolio2/node_modules/mongodb-client-encryption/index.js"],"names":["defaultModule","loadDefaultModule","extension","require","MongoCryptError","mongodb","modules","stateMachine","autoEncrypter","clientEncryption","AutoEncrypter","ClientEncryption","module","exports","m"],"mappings":"AAAA;;AAEA,IAAIA,aAAJ;;AACA,SAASC,iBAAT,GAA6B;AAC3B,MAAI,CAACD,aAAL,EAAoB;AAClBA,IAAAA,aAAa,GAAGE,SAAS,CAACC,OAAO,CAAC,SAAD,CAAR,CAAzB;AACD;;AAED,SAAOH,aAAP;AACD;;AAED,MAAMI,eAAe,GAAGD,OAAO,CAAC,cAAD,CAAP,CAAwBC,eAAhD;;AACA,SAASF,SAAT,CAAmBG,OAAnB,EAA4B;AAC1B,QAAMC,OAAO,GAAG;AAAED,IAAAA;AAAF,GAAhB;AAEAC,EAAAA,OAAO,CAACC,YAAR,GAAuBJ,OAAO,CAAC,oBAAD,CAAP,CAA8BG,OAA9B,CAAvB;AACAA,EAAAA,OAAO,CAACE,aAAR,GAAwBL,OAAO,CAAC,qBAAD,CAAP,CAA+BG,OAA/B,CAAxB;AACAA,EAAAA,OAAO,CAACG,gBAAR,GAA2BN,OAAO,CAAC,wBAAD,CAAP,CAAkCG,OAAlC,CAA3B;AAEA,SAAO;AACLI,IAAAA,aAAa,EAAEJ,OAAO,CAACE,aAAR,CAAsBE,aADhC;AAELC,IAAAA,gBAAgB,EAAEL,OAAO,CAACG,gBAAR,CAAyBE,gBAFtC;AAGLP,IAAAA;AAHK,GAAP;AAKD;;AAEDQ,MAAM,CAACC,OAAP,GAAiB;AACfX,EAAAA,SADe;AAEfE,EAAAA,eAFe;;AAGf,MAAIM,aAAJ,GAAoB;AAClB,UAAMI,CAAC,GAAGb,iBAAiB,EAA3B;AACA,WAAOW,MAAM,CAACC,OAAP,CAAeH,aAAtB;AACAE,IAAAA,MAAM,CAACC,OAAP,CAAeH,aAAf,GAA+BI,CAAC,CAACJ,aAAjC;AACA,WAAOI,CAAC,CAACJ,aAAT;AACD,GARc;;AASf,MAAIC,gBAAJ,GAAuB;AACrB,UAAMG,CAAC,GAAGb,iBAAiB,EAA3B;AACA,WAAOW,MAAM,CAACC,OAAP,CAAeF,gBAAtB;AACAC,IAAAA,MAAM,CAACC,OAAP,CAAeF,gBAAf,GAAkCG,CAAC,CAACH,gBAApC;AACA,WAAOG,CAAC,CAACH,gBAAT;AACD;;AAdc,CAAjB","sourcesContent":["'use strict';\n\nlet defaultModule;\nfunction loadDefaultModule() {\n  if (!defaultModule) {\n    defaultModule = extension(require('mongodb'));\n  }\n\n  return defaultModule;\n}\n\nconst MongoCryptError = require('./lib/common').MongoCryptError;\nfunction extension(mongodb) {\n  const modules = { mongodb };\n\n  modules.stateMachine = require('./lib/stateMachine')(modules);\n  modules.autoEncrypter = require('./lib/autoEncrypter')(modules);\n  modules.clientEncryption = require('./lib/clientEncryption')(modules);\n\n  return {\n    AutoEncrypter: modules.autoEncrypter.AutoEncrypter,\n    ClientEncryption: modules.clientEncryption.ClientEncryption,\n    MongoCryptError\n  };\n}\n\nmodule.exports = {\n  extension,\n  MongoCryptError,\n  get AutoEncrypter() {\n    const m = loadDefaultModule();\n    delete module.exports.AutoEncrypter;\n    module.exports.AutoEncrypter = m.AutoEncrypter;\n    return m.AutoEncrypter;\n  },\n  get ClientEncryption() {\n    const m = loadDefaultModule();\n    delete module.exports.ClientEncryption;\n    module.exports.ClientEncryption = m.ClientEncryption;\n    return m.ClientEncryption;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}